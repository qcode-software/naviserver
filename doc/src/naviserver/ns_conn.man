[include version_include.man]
[manpage_begin ns_conn n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Find information about the current HTTP connection}]

[description]

This command is used to retrieve various pieces of information about a connection.

[section {COMMANDS}]

[list_begin definitions]

[call [cmd ns_conn] [arg option] [opt [arg {arg arg ...}]]]

[list_end]

[list_begin definitions]

[call [cmd  ns_conn] [arg authpassword]]

Returns the decoded user password from the authorization data.

[call [cmd  ns_conn] [arg authuser]]

Returns the decoded user name from the authorization data.

[call [cmd  ns_conn] [arg auth]]

Returns all authorization headers as a ns_set. For Basic authentication
there are reserved keys: Username and Password, these are the keys returned by ns_conn authuser and
ns_conn authpassword. This ns_set can be updated.

[call [cmd  ns_conn] [arg close]]

Closes the connection so the script (or ADP) can do any time-consuming processing
without making the client wait. If you use ns_conn close in an ADP, streaming
should be turned on before closing the connection (i.e. <SCRIPT RUNAT=SERVER STREAM=ON>)
or nothing will get sent out at all.

[call [cmd  ns_conn] [arg content] [opt [arg offset]] [opt [arg length]]]

Returns the content of the HTTP request body, optionally a substring of that content
starting at offset and extending length characters.

[call [cmd  ns_conn] [arg contentlength]]

Returns the number of bytes in the content passed in.

[call [cmd  ns_conn] [arg copy] [arg off] [arg len] [arg chan]]

Copies data from the current connection to chan starting at byte off for len bytes.

[call [cmd  ns_conn] [arg driver]]

Returns the name of the module (nssock or nsssl) that is acting as the
communications driver for this connection.

[call [cmd  ns_conn] [arg form]]

Returns any submitted form data as an ns_set. This form data may have been submitted
with a POST or appended to the URL in a GET request. Note: ns_conn form is not suitable
for multipart formdata file upload widgets.

[call [cmd  ns_conn] [arg headers]]

Returns all the header data as an ns_set. The keys of the ns_set represent the field
names. The case of the returned field names depends on the HeaderCase configuration
parameter. By default, HeaderCase is "Preserve", which means case is preserved.

[call [cmd  ns_conn] [arg host]]

Returns the host part of the URL in the HTTP request.

[call [cmd  ns_conn] [arg isconnected]]

Returns 1 if you're in a connection thread, and you are therefore allowed to make
calls to ns_conn. It returns 0 if you're not in a connection thread (such as when
you're in a schedule procedure) and you are not allowed to make calls to ns_conn.

[call [cmd  ns_conn] [arg location]]

Returns the location string for this virtual server in the form: protocol://hostname[lb]:port[rb].

[call [cmd  ns_conn] [arg method]]

Returns the HTTP method, e.g. GET.

[call [cmd  ns_conn] [arg outputheaders]]

Returns an ns_set containing the headers that will be sent out when a result is returned
to the client. This ns_set can be manipulated like any other ns_set. You can also use this
command to write to the set of output headers. For example: ns_set put [lb]ns_conn outputheaders[rb] key value.

[call [cmd  ns_conn] [arg peeraddr]]

Returns the IP address of the client, i.e. the "other side" of the HTTP connection. The
IP address is returned in the form of a string separated with periods (e.g., 155.164.59.75).

[call [cmd  ns_conn] [arg port]]

Returns the port specified explicitly in the URL of the HTTP request. If the browser does
not explicity send the ":port" part of the URL, the port number returned will be 0.

[call [cmd  ns_conn] [arg protocol]]

Returns the protocol of the URL in the HTTP request (usually unspecified).

[call [cmd  ns_conn] [arg query]]

Returns any query data that was part of the HTTP request.

[call [cmd  ns_conn] [arg request]]

Returns the HTTP request line as presented by the client, e.g. GET / HTTP/1.1.

[call [cmd  ns_conn] [arg start]]

Returns the time the connection request started in "sec:usec" (aka ns_time) format.

[call [cmd  ns_conn] [arg url]]

Returns the URL of the HTTP request. This is the portion of the request after the
hostname, for example [lb]ns_conn url[rb] on  returns /index.adp.

[call [cmd  ns_conn] [arg urlc]]

Returns the number of elements (delimited by `/') in the URL of the HTTP request.

[call [cmd  ns_conn] [arg urlv]]

 Returns a list containing the pieces of the URL delimited by `/'.

[call [cmd  ns_conn] [arg version]]

Returns the version of the HTTP request. This is usually 1.0 or 1.1.

[call [cmd  ns_conn] [arg contentfile]]

Returns name of the temprorary file which holds contents of the request. This only works
when maxupload parameter to nssock driver is set to the value between 1K and maxinput

[list_end]

[section EXAMPLES]

[example_begin]

if { [lb]string match /page/* [lb]ns_conn url[rb][rb] } {
  ns_returnnotfound
}

[example_end]

[keywords ns_getform ns_queryget ns_time]

[manpage_end]

