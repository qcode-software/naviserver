[include version_include.man]
[manpage_begin ns_register_filter n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Register a filter function for a method/URL combination}]

[description]

ns_register_filter registers a Tcl filter script for the specified method/URL combination
on a virtual server. The script can be called at one or more of three given times:
pre-authorization, post-authorization before page data has been returned to the user,
and after the connection has been processed and closed.

[para]
This function will be called at the specified stage of a connection, if the method/URL
combination for the filter matches the method/URL combination for the connection using glob style matching.

[para]
The URLpattern can contain standard string-matching characters. For example, these are valid URLpatterns:

[para]
/employees/*.tcl
[para]
/accounts/*/out

[para]
Valid values for the when argument are: preauth, postauth, and trace.

[para]
Using pre-authorization, the procedure will be called (assuming that the method/URL
combination matches) just before authorization. If the procedure returns with a code of:

[list_begin itemized]

[item] TCL_OK (using: return "filter_ok"): The server will continue to the next pre-authorization
         filter for this connection, or, if there are no more pre-authorization filters, it will
          continue on with authorization.

[item] TCL_BREAK (using: return "filter_break"): The server will not process any more pre-authorization
         filters for this connection, and it will continue on with authorization.

[item] TCL_RETURN (using: return "filter_return"): The server will close the connection and will
         not run any more pre-authorization filters. It will not authorize the request, and it will
         not run the function registered for this METHOD/URL. It WILL run any trace functions
         registered for this METHOD/URL, usually including logging. It is assumed that the filter
         has sent a proper response (e.g., using ns_return) to the client before returning TCL_RETURN.
[list_end]

Using post-authorization, the procedure will be called (assuming that the method/URL combination matches)
just after successful authorization. If the procedure returns:

[list_begin itemized]

[item] TCL_OK (using: return "filter_ok"): The server will continue to the next post-authorization 
         filter for this connection, or, if there are no more post-authorization filters, it will run
         the function registered to handle this request.

[item] TCL_BREAK (using: return "filter_break"): The server will not process any more post-authorization
         filters for this connection, and it will run the function registered to handle this request.

[item] TCL_RETURN (using: return "filter_return"): The server will close the connection and will
         not run any more post-authorization filters and it will not run the function registered for
         this METHOD/URL. It WILL run any trace functions registered for this METHOD/URL, usually
         including logging. It is assumed that the filter has returned a proper response (e.g.,
          using ns_return) to the client before returning TCL_RETURN.

[list_end]

Using trace, the procedure will be called (assuming that the method/URL combination match) after
the connection has been totally processed and closed. If the procedure returns:

[list_begin itemized]

[item] TCL_OK (using: return "filter_ok"): The server will continue to the next trace filter.

[item] TCL_BREAK, TCL_RETURN (using: return "filter_break" or return "filter_return"): The rest
         of the trace filters are ignored.

[list_end]

[section NOTES]

ns_register_filter and ns_register_proc are similar, but significantly different.
With ns_register_proc, the specified URL is used to match that URL and any URL below
it in the hierarchy. Wildcards such as "*" are meaningful only for the final part of
the URL, such as /scripts/*.tcl. With ns_register_filter, the URLpattern is used to 
match URLs as a string with standard string-matching characters. ns_register_proc 
results in a single match, whereas multiple ns_register_filters can be matched and
will be called.

Be aware that executing the same ns_register_filter statement more than once (as
you might do when re-initializing Tcl) will add the filter more than once! You 
may want to have a shared variable set so that you don't do this.

[section COMMANDS]

[list_begin definitions]

[call [cmd ns_register_filter] [arg when] [arg method] [arg URLpattern] [arg script] [opt [arg args]]]

[list_end]

[section EXAMPLES]

This example expires all HTML files after an hour.

[example_begin]

ns_share -init {set filters_installed 0} filters_installed

if {!$filters_installed} {
  set filters_installed 1
  ns_register_filter postauth GET /*.html ExpireSoon 3600
}
proc ExpireSoon {seconds why} {
  ns_set update [lb]ns_conn outputheaders[rb] Expires [lb]ns_httptime [lb]expr $seconds + [lb]ns_time[rb][rb][rb]
}
[example_end]

[manpage_end]

