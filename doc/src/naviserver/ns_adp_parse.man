[include version_include.man]
[manpage_begin ns_adp_parse n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Parse an ADP file or string and return its output}]

[description]

This function processes the specified ADP file or string and returns
the result as a string. Processing a second ADP from inside an ADP
is normally best done with ns_adp_include as that command
resolves relative pathnames passed to it.  Also note that
ns_adp_parse will ignore any directives to turn on streaming.
Tcl_Eval is used to evaluate the Tcl commands in the ADP.

[para]
Although the <% ... %> syntax is allowed in the string,
if you have this embedded in an ADP, you have to be careful in
constructing the string that you do not prematurely terminate an
enclosing script.

[section {COMMANDS}]

[list_begin definitions]

[call [cmd ns_adp_parse] \
	[opt [arg {-cwd path}]] \
	[opt [arg {-file}]] \
	[opt [arg {-safe}]] \
	[opt [arg {-string}]] \
	[opt {args ...}]]

[list_end]

[para]
The [opt -cwd] option can be used to set the current working directory
for this adp parse operation

[para]
The [opt -file] option can be used to parse ADP contained in
the given file.  This use is similar to that of ns_adp_include
except the result is returned by the command instead of automatically
being appended to the output stream.

[para]
The [opt -safe] option can be used to set the adp safe flag.

[para]
The [opt -string] option is provided for backwards compatibility, but
does nothing since string mode is the default mode.

[para]
Additional arguments are passed to the ADP execution and can be
accessed via the ns_adp_argc, ns_adp_argv, and
ns_adp_bind_args commands.

[para]
You can pass optional arguments to the ADP.  The arguments can be accessed within the
ADP using the ns_adp_argc, ns_adp_argv and ns_adp_bind_args commands.

[para]
If this call is a nested ADP evaluation (where one ADP calls another), an error will
be thrown if the depth exceeds 256, the maximum number of nested ADP evaluations.

[section EXAMPLES]

[example_begin]
   % ns_adp_parse {<%= [lb]expr 2 + 2[rb] %>}
   4
[example_end]

[example_begin]
   % ns_adp_parse -file foo.tcl
[example_end]

[manpage_end]

