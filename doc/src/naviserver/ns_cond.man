[include version_include.man]
[manpage_begin ns_cond n [vset version]]
[moddesc {NaviServer Built-in Commands}]

[titledesc {Operate on condition variables}]

[description]

This command provides a mechanism to manipulate condition variables.

[list_begin definitions]


[call [cmd ns_cond] [arg option] [opt [arg {arg arg ...}]]]


[list_end]

[section {COMMANDS}]

[list_begin definitions]

[call [cmd  ns_cond] [arg broadcast] [arg object]]

Wakes up all threads waiting on the specified object.

[call [cmd  ns_cond] [arg create]]

Initializes a new condition variable and returns a handle to it.

[call [cmd  ns_cond] [arg destroy] [arg object]]

Destroys the condition variable and frees any resources it was using.

NOTE: No threads must be waiting on the condition variable, or else the behavior
is undefined and will likely crash the server.

[call [cmd  ns_cond] [arg {set object}]]

Wakes up one thread waiting on the specified object.  If more than one thread
is waiting, only one is woken up.  If no threads are waiting, nothing happens.

[call [cmd  ns_cond] [arg abswait] [arg condId] [arg mutexId] [opt [arg timeout]]]

Waits on a condition variable. If [arg timeout] is specified, it
refers to an absolute time in Unix seconds to wait until.  
If not specified, timeout defaults to 0, which causes the command
to not sleep at all.  Returns 1 on success or 0 on timeout.

[call [cmd  ns_cond] [arg wait] [arg condId] [arg mutexId] [opt [arg timeout]]]

Waits on a condition variable.  If [arg timeout] is not specified, the thread will sleep
indefinitely.  Otherwise, the thread will wait up to timeout seconds.  Returns 1
on success or 0 on timeout.

[list_end]

[section EXAMPLES]

[see_also nsd]
[keywords ns_event ns_mutex ns_thread]

[manpage_end]

