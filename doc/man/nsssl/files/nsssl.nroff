'\"
'\" Generated from file 'nsssl\&.man' by tcllib/doctools with format 'nroff'
'\"
.TH "nsssl" n 4\&.99\&.23 nsssl "NaviServer Modules"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
nsssl \- Configuring HTTPS socket communications
.SH DESCRIPTION
The driver module \fInsssl\fR is used for the socket communication
over HTTPS\&. The module shares the configuration parameters of
\fInssock\fR and adds additional parameters\&. This driver requires a
NaviServer installation with the configuration option --with-openssl
enabled\&.
.SH CONFIGURATION
This module support all configuration options of \fInssock\fR module,
plus in addition the following configuration options:
.TP
certificate
is a required parameter, nsssl won't load without it\&.  The parameter
points to a file containing certificates, which must be in PEM format
and must be sorted starting with the subject's certificate (actual
client or server certificate), followed by intermediate CA
certificates if applicable, and ending at the highest level (root) CA\&.
The PEM file cem can contain DH parameters (see the example below how
to add these)\&.
.sp
When the server receives a hangup signal (HUP), the
certificates and private keys are reloaded without server restart\&.
The signal can be send also from a script executed in the server:
.CS


  ns_kill 7754 1    ;# SIGHUP has signal number 1

.CE
.TP
ciphers
defines which ciphers will be used\&. The
ciphers are defined in the OpenSSL "CIPHER LIST FORMAT"
\fIhttps://www\&.openssl\&.org/docs/manmaster/apps/ciphers\&.html\fR\&.
By default nsssl uses all ciphers; recommended cipher
suites are published on various sources, such as e\&.g\&.:
\fIhttps://wiki\&.mozilla\&.org/Security/Server_Side_TLS\fR
.TP
ciphersuites
defines which ciphersuites for TLSv1\&.3 (and probably beyond)\&.
Due to the major differences between ciphersuites up to TLSv1\&.2
OpenSSL has decided to configure ciphersuited for TLSv1\&.3
differently, by using this parameter\&. For details, consult:
\fIhttps://wiki\&.openssl\&.org/index\&.php/TLS1\&.3\fR
.TP
protocols
defines which protocols are enabled; by default all protocols are
enabled\&. It is recommended to deactivate SSLv2 and SSLv3 as shown
in the example above\&.
.TP
verify
specifies, whether nsssl should send a client certificate request to
the client\&. The certificate returned (if any) is checked\&. If the
verification process fails, the TLS/SSL handshake is immediately
terminated with an alert message containing the reason for the
verification failure\&.
.TP
OCSPstapling
This parameter activates OCSP Stapling for TLS/SSL connections
(default off)\&.  OCSP Stapling allows a client to check during
connection startup the state of the server certificate at the server
of the issuer of the certificate (in particular, whether the
certificate was revoked or not)\&.
.sp
NaviServer performs two level of caching: in-memory caching and
disk caching\&. When the server receives the first TLS request with OCSP
stapling turned on, it checks for an already retrieved OCSP
response\&. The disk cache file is saved in the "log" directory of the
server and uses the serial number of the certificate to be checked as
filename with "\&.der" as extension\&.  When the disk cache file does
not exist, an HTTP/HTTPS request is made to the server issuing the
servers certificate as defined by the Authority Information Access
(AIA) Extension\&. The names of the file and the HTTP/HTTPS request for
the OCSP response can be obtained from the system log of the server:
.CS


\&.\&.\&.
\&.\&.\&. Warning: OCSP cache file does not exist: /usr/local/ns/logs/XXX\&.der
\&.\&.\&.
\&.\&.\&. Notice: OCSP command: ns_http run http://ocsp\&.int-x3\&.letsencrypt\&.org/YYYY
\&.\&.\&.

.CE
.IP
Note that the \&.der file can be obtained as well by other means,
e\&.g\&. via the program "curl"\&. In case an application requires OCSP
stapling and the server cannot make requests to the external server
e\&.g\&. a cron tab can refresh the \&.der file regularly\&.
.CS


curl http://ocsp\&.int-x3\&.letsencrypt\&.org/YYYY --output /usr/local/ns/logs/XXX\&.der

.CE
.IP
For more details about OCSP, see:
\fIhttps://tools\&.ietf\&.org/html/rfc6960\fR
OCSP support requires OpenSSL 1\&.1\&.0 or newer\&.
.TP
OCSPstaplingVerbose
Optionally make OCSP requests more verbose in the log file\&.
.TP
extraheaders
can be used to specify additional header fields be sent on every
request handled by this driver\&. The example above,
HTTP Strict Transport Security (HSTS) is enabled\&.
.PP
.SH EXAMPLES
The module is typically loaded per server (specified
below in the variable "server"):
.CS


 ns_section    ns/server/$server/modules {
    ns_param      nsssl            nsssl\&.so
 }

 ns_section    ns/server/$server/module/nsssl {
    ns_param   certificate   /usr/local/ns/modules/nsssl/server\&.pem
    ns_param   address       0\&.0\&.0\&.0
    ns_param   port          443
    ns_param   ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
    ns_param   ciphersuites "TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256"
    ns_param   protocols    "!SSLv2:!SSLv3:!TLSv1\&.0:!TLSv1\&.1"
    ns_param   OCSPstapling   on
    ns_param   verify         0

    ns_param   extraheaders {
       Strict-Transport-Security "max-age=31536000; includeSubDomains"
       X-Frame-Options SAMEORIGIN
       X-Content-Type-Options nosniff
    }
 }

.CE
This amount of configuration is sufficient for many installations, but
often one needs different security setting (path the to certificate, port,
ciphers, etc\&.) or additional settings from \fInssock\fR such as e\&.g\&.
\fIwriterthreads\fR, \fImaxinput\fR or \fImaxupload\fR\&.
.PP
Below is an example, how a web site can create a self-signed
certificate in PEM format\&.  The last line with the DH parameters is
optional but necessary for achieving perfect forward secrecy\&.
.CS


 openssl req -new -x509 -sha256 -newkey rsa:2048 -days 365 -nodes  -keyout host\&.key\&.pem -out host\&.cert\&.pem
 cat host\&.cert\&.pem host\&.key\&.pem > server\&.pem
 rm host\&.cert\&.pem host\&.key\&.pem
 openssl dhparam 2048 >> server\&.pem

.CE
.PP
For discussion and more examples see
\fIadmin-config\fR [\&.\&./\&.\&./manual/files/admin-config\&.html]\&.
.SH "SEE ALSO"
ns_http, ns_log, ns_write
.SH KEYWORDS
HTTPS, TCP_FASTOPEN, configuration, driver, module, nsssl, performance, signal, tuning
