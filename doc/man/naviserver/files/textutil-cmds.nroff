'\"
'\" Generated from file 'textutil-cmds\&.man' by tcllib/doctools with format 'nroff'
'\"
.TH "textutil-cmds" n 4\&.99\&.23 naviserver "NaviServer Built-in Commands"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
textutil-cmds \- Utility commands for processing text
.SH SYNOPSIS
\fBns_quotehtml\fR \fIhtml\fR
.sp
\fBns_striphtml\fR \fIhtml\fR
.sp
\fBns_reflow_text\fR ?\fB-width \fIwidth\fR\fR? ?\fB-offset \fIoffset\fR\fR? ?\fB-prefix \fIprefix\fR\fR? \fItext\fR
.sp
\fBns_trim\fR ?\fB-subst\fR? ?\fB-delimiter \fIdelimiter\fR\fR? ?\fB-prefix \fIprefix\fR\fR? \fItext\fR
.sp
.BE
.SH DESCRIPTION
These commands support common tasks of processin text chunks in
webserver applications\&.
.SH COMMANDS
.TP
\fBns_quotehtml\fR \fIhtml\fR
Returns the contents of HTML with certain characters that are special in HTML
replaced with an escape code\&.  The resulting text can be literally displayed
in a webpage with an HTML renderer\&. Specifically:
.RS
.TP
& becomes &amp;
.TP
< becomes &lt;
.TP
> becomes &gt;
.TP
\' becomes &#39;
.TP
" becomes &#34;
.RE
.IP
All other characters are unmodified in the output\&.
.TP
\fBns_striphtml\fR \fIhtml\fR
Returns the contents of \fIhtml\fR with all HTML tags removed\&.
This function replaces as well all known HTML4 named entities and
three-digit numeric entities by its UTF-8 representations and removes
HTML comments\&.
.TP
\fBns_reflow_text\fR ?\fB-width \fIwidth\fR\fR? ?\fB-offset \fIoffset\fR\fR? ?\fB-prefix \fIprefix\fR\fR? \fItext\fR
Reflow a text to the specified length\&. The arguments
\fIwidth\fR (default 80) and \fIoffset\fR (default 0)
are integers referring to number of characters\&. The
\fIprefix\fR can be used to prefix every resulting line
with a constant string\&.
.TP
\fBns_trim\fR ?\fB-subst\fR? ?\fB-delimiter \fIdelimiter\fR\fR? ?\fB-prefix \fIprefix\fR\fR? \fItext\fR
Multi-line trim with optional \fIdelimiter\fR or \fIprefix\fR\&.
The command is useful, when not the full indentation from the source code
file (with a indentation depending on the nesting level) should
be preserved on the output (such as SQL statements, HTML markup, etc\&.)\&.
.sp
When neither \fB-delimiter\fR or \fB-prefix\fR is specified
all leading whitespace is stripped from the result\&.
When \fB-delimiter\fR is specified, the delimiter is stripped as
well\&.  The specified \fIdelimiter\fR has to be a single character\&.
.sp
When \fB-prefix\fR is used the specified string will be stripped from
lines starting exactly with this prefix (example: use
\fB-prefix \fI>>\fR\fR to strip the prefix \fI>>\fR from
every line starting with it\&. This option is mutual exclusive with
the option \fB-delimiter\fR\&.
.sp
Optionally, substitution can be used, which is applied before
trimming (not really needed but sometimes convenient)\&.
.sp
.PP
.SH EXAMPLES
.CS


 % ns_quotehtml "Hello World!"
 Hello World!

 % ns_quotehtml "The <STRONG> tag is used to indicate strongly emphasized text\&."
 The &lt;STRONG&gt; tag is used to indicate strongly emphasized text\&.

 % ns_quotehtml {<span class="foo">}
 &lt;span class=&#34;foo&#34;&gt;

.CE
.CS


 % ns_reflow_text -width 15 -prefix "> " "one two three four five six seven eight nine ten"
 > one two three
 > four five six
 > seven eight
 > nine ten

.CE
.CS


 % ns_striphtml "<MARQUEE direction='right'><BLINK>Hello World!</BLINK></MARQUEE>"
 Hello World!

.CE
.CS


 % ns_trim {
    SELECT object_id, object_name
    FROM   acs_objects
    WHERE  object_id > 10000
 }
 SELECT object_id, object_name
 FROM   acs_objects
 WHERE  object_id > 10000

 % ns_trim -delimiter | {
    | <ul>
    |   <li> one
    |   <li> two
    |   <li> three
    | </ul>
 }
  <ul>
    <li> one
    <li> two
    <li> three
  </ul>

 ns_trim -prefix "> " {
 > line 1
 > line 2
 }

 line 1
 line 2

.CE
.SH "SEE ALSO"
ns_hrefs
.SH KEYWORDS
HTML, encoding, quote, server built-in, text
