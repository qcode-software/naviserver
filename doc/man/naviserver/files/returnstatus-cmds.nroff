'\"
'\" Generated from file 'returnstatus-cmds\&.man' by tcllib/doctools with format 'nroff'
'\"
.TH "returnstatus-cmds" n 4\&.99\&.19 naviserver "NaviServer Built-In Commands"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
returnstatus-cmds \- Return a complete HTTP status message
.SH SYNOPSIS
\fBns_returnok\fR
.sp
\fBns_returnmoved\fR \fIurl\fR
.sp
\fBns_returnredirect\fR \fIurl\fR
.sp
\fBns_returnbadrequest\fR \fIreason\fR
.sp
\fBns_returnunauthorized\fR
.sp
\fBns_returnforbidden\fR
.sp
\fBns_returnnotfound\fR
.sp
\fBns_returnunavailable\fR
.sp
\fBns_returnerror\fR \fIstatus\fR \fImessage\fR
.sp
\fBns_returnnotice\fR \fIstatus\fR \fItitle\fR \fImessage\fR
.sp
.BE
.SH DESCRIPTION
These commands return a complete response to the client using a variety of
different HTTP status codes\&. On contrary to the lower level commands
like \fBns_return\fR these commands are designed to ease consistent
behavior in common success, redirect or error situations\&.
Like with \fBns_return\fR all queued headers, such as those set by
\fBns_setcookie\fR (see \fBns_cookie\fR) or via \fBns_conn\fR \fBoutputheaders\fR and
\fBns_set put\fR, are added to the default headers and sent in the response\&.
.PP
These commands return 0 (zero) if the response was successfully
sent to the client and 1 if the write to the connection failed\&.
They will raise an error if no connection is available, e\&.g\&. they are called from
a non-connection thread or the response has already been sent and the connection
closed\&.
.PP
After the command returns the connection is returned to the driver thread to be
closed or monitored for keep-alive\&. The calling connection thread can then
continue to execute code, e\&.g\&. to cleanup resources or for logging\&.
.PP
Custom error pages may be specified in the server configuration file to
override the default HTML message which is returned, for those commands which
return one\&.
.PP
NOTE: The script does not end at the time these commands are invoked\&.
When used in an ADP page, \fBns_adp_abort\fR or \fBns_adp_return\fR
should be called to end script processing after ns_returnredirect\&.
.SH COMMANDS
.TP
\fBns_returnok\fR
Return a response with status code \fI200\fR, \fIOK\fR\&. No body content is
sent\&.
.TP
\fBns_returnmoved\fR \fIurl\fR
Return a response with status code \fI301\fR, \fIMoved\fR\&. A \fILocation\fR
header will be set with the given \fIurl\fR\&.
.sp
Use this response to signal that the resource identified by the requested URL
has permanently moved to a new location\&. The client should request the new URL
instead of the old one in the future\&.
.TP
\fBns_returnredirect\fR \fIurl\fR
Return a response with status code \fI302\fR, \fIFound\fR\&. The \fILocation\fR
header will be set to the \fIurl\fR if given\&. For non-fully qualified
target addresses, the URL is completed with either the location
configured via \fBns_locationproc\fR or via the \fIlocation\fR configured in the
network driver module (see \fBnssock\fR)\&.
.sp
Use this response to signal that the resource identified by the requested URL has
temporarily moved to a new location\&. The client should continue to request the
old URL\&.
.TP
\fBns_returnbadrequest\fR \fIreason\fR
Return a response with status code \fI400\fR, \fIBad Request\fR using the
given \fIreason\fR in the HTML message\&.
.sp
Use this response to signal that the client sent a malformed request and should
not try again without modifications\&.
.TP
\fBns_returnunauthorized\fR
Return a response with status code \fI401\fR, \fIAccess Denied\fR\&. A
\fIWWW-Authenticate\fR header will be set using the \fIrealm\fR specified
in the configuration file option \fIns/server:realm\fR\&.
.sp
Use this response to signal that the user is not authorized to access the URL,
and to trigger \fIHTTP basic\fR authorization\&. The client may present
a pop-up window for the user to enter their \fIusername\fR and \fIpassword\fR\&.
.sp
NB: The username and password will be sent in plain text\&.
.TP
\fBns_returnforbidden\fR
Return a response with status code \fI403\fR, \fIForbidden\fR\&.
.sp
Use this response to signal that the authentication information the client
supplied are insufficient to grant them access to the requested URL\&.
.TP
\fBns_returnnotfound\fR
Return a response with status code \fI404\fR, \fINot Found\fR\&.
.sp
Use this response to signal that the content the client requested could not be
located given the URL that was requested\&.
.TP
\fBns_returnunavailable\fR
Return a response with status code \fI503\fR, \fIUnavailable\fR\&.
.sp
Use this response to signal that the server is too busy to deliver the requested
resource or is undergoing maintenance\&.
.TP
\fBns_returnerror\fR \fIstatus\fR \fImessage\fR
Return a response with the given \fIstatus\fR code and the error \fImessage\fR
wrapped in HTML\&.
.sp
Use this command to return a HTTP status response to the client which is not
covered by the above commands, or to customize the HTML message\&.
.TP
\fBns_returnnotice\fR \fIstatus\fR \fItitle\fR \fImessage\fR
Return a response with the given \fIstatus\fR code and an HTML message with the
given \fItitle\fR and \fImessage\fR\&.
.sp
Use this command to return an arbitrary response to the client\&. Some HTTP
responses are expected not to return body content\&. Check RFC 2616 for details\&.
.sp
NB: You should be careful what you put in the \fItitle\fR and \fImessage\fR\&.
It may be tempting to use data which the client has sent you such as a form
variable, but it may not be what you expect\&.
.PP
.PP
Note: The script does not end at the time this command is
invoked\&. \fBns_adp_abort\fR or ]cmd ns_adp_return] should be called to
end script processing after ns_returnforbidden\&.
.SH CONFIGURATION
The body of the response which is returned for a variety of status codes can be
customized by registering a new resource which should be returned in it's place\&.
The new resource may be a static, Tcl or ADP page, or a registered procedure
or ADP\&.
.CS


\fBns_section\fR "ns/server/server1/redirects"
\fBns_param\fR   404    /notfound\&.adp
\fBns_param\fR   503    /busy\&.html

.CE
.PP
The realm used for HTTP Basic authentication is set server-wide:
.CS


\fBns_section\fR "ns/server"
\fBns_param\fR   realm  "Example"

.CE
.SH EXAMPLES
Use a custom error message to notify users when the hamsters which turn the
wheels that run the server are on lunch break:
.CS


ns_register_proc GET /service {

    set hour [clock format [clock seconds] -format %H]

    if {$hour >= 12 && $hour <= 13} {
        ns_returnerror 503 "Gone for lunch\&. Back at 2pm\&."
        return
    }

    \fBns_returnok\fR
}

.CE
.SH "SEE ALSO"
ns_conn, ns_cookie, ns_internalredirect, ns_locationproc, ns_return
.SH KEYWORDS
configuration, nssock, redirect, response, return, server built-in, status