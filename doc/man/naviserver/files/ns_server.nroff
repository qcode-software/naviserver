'\"
'\" Generated from file 'ns_server\&.man' by tcllib/doctools with format 'nroff'
'\"
.TH "ns_server" n 4\&.99\&.19 naviserver "NaviServer Built-in Commands"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
ns_server \- Get state of the server's connection pools and queues
.SH SYNOPSIS
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBfilters\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBpagedir\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBpools\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBrequestprocs\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBserverdir\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBtcllib\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBtraces\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBurl2file\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBactive\fR ?\fB-checkforproxy\fR?
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBall\fR ?\fB-checkforproxy\fR?
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBqueued\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBconnections\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBmap\fR ?\fB-noinherit\fR? ?\fImapspec\fR?
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBmapped\fR ?\fB-exact\fR? ?\fB-noinherit\fR? \fImapspec\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBmaxthreads\fR ?\fIvalue\fR?
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBminthreads\fR ?\fIvalue\fR?
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBconnectionratelimit\fR ?\fIvalue\fR?
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBpoolratelimit\fR ?\fIvalue\fR?
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBstats\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBthreads\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBunmap\fR ?\fB-noinherit\fR? \fImapspec\fR
.sp
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBwaiting\fR
.sp
.BE
.SH DESCRIPTION
This command provides a way to examine the current server's
connection pools and queues\&.  The legal options (which may be abbreviated) are:
.SH COMMANDS
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBfilters\fR
Returns a list of the currently defined filters\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBpagedir\fR
Returns the path of the virtual server's page directory root\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBpools\fR
Returns a list of the pools defined for this server\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBrequestprocs\fR
Returns a list of the currently defined requestprocs  (the registered
procs for certain request patterns)\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBserverdir\fR
Returns the path of the virtual server's base directory\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBtcllib\fR
Returns the path of the virtual server's private Tcl library\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBtraces\fR
Returns a list of the currently defined traces\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBurl2file\fR
Returns a list of the mappings from URLs to files\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBactive\fR ?\fB-checkforproxy\fR?
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBall\fR ?\fB-checkforproxy\fR?
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBqueued\fR
These three commands return information about queued or running
requests\&. For every request the command returns a list containing
connection id, the peer address, state ("running" or "queued"), the
request (HTTP method and url), running time, and bytes sent\&. The
sub-command \fIall\fR returns the union of the running and queued
requests\&.
.sp
When option \fB-checkforproxy\fR is given, it tries to
return the peer address from "X-Forwarded-For" header field\&. If this
is not possible (not given, or empty, or having the value "unknown") it falls
back to the physical peer address\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBconnections\fR
Returns the number of connection requests processed by this pool since
startup\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBmap\fR ?\fB-noinherit\fR? ?\fImapspec\fR?
When the optional mapping specification (argument \fImapspec\fR) is
provided add this mapping to the server and pool (as specified or
default)\&. As a consequence matching requests (based on HTTP method and
path) will be mapped to this connection pool\&.
.sp
When the optional argument \fImapspec\fR is not provided, the
command returns a list of mappings for the (given or default) server
and pool\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? \fBmapped\fR ?\fB-exact\fR? ?\fB-noinherit\fR? \fImapspec\fR
Return the connection pool associated with the mapping specification
(HTTP method and path)\&.  When the option \fB-exact\fR is used, the
inheritance is deactivated, and only the values are returned directly
assigned to the URL\&. When the option \fB-noinherit\fR is specified,
only values set with the \fB-noinherit\fR flag are returned\&. For
requests handled by the default connection pool, empty is returned\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBmaxthreads\fR ?\fIvalue\fR?
Query or set the maximum number of connection threads for this server
and pool\&. The value must be large than \fIminthreads\fR and less than
the maximum number of connections\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBminthreads\fR ?\fIvalue\fR?
Query or set the minimum number of connection threads for this server
and pool\&. The value must be between 1 and \fImaxthreads\fR\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBconnectionratelimit\fR ?\fIvalue\fR?
Query or set the maximum transmission rate per connection when data is sent via
writer threads\&. The value is provided as KB/s\&. 0 means no rate limit\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBpoolratelimit\fR ?\fIvalue\fR?
Query or set the maximum transmission rate for the pool when data is sent via
writer threads\&. The value is provided as KB/s\&. 0 means no rate
limit\&. When the pool rate limit is set, all connections in this pool
are managed\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBstats\fR
Returns a list of attribute value pairs containing statistics for the
server and pool, containing the number of requests, queued requests,
cumulative times, and the number of thread starts\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBthreads\fR
Returns a list of attribute value pairs containing information about the
number of connection threads for the server and pool\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBunmap\fR ?\fB-noinherit\fR? \fImapspec\fR
Undo the effect of a \fBns_server map\fR operation\&.  As a
consequence formerly mapped requests will be served by the default
connection pool\&.
.TP
\fBns_server\fR ?\fB-server \fIs\fR\fR? ?\fB-pool \fIp\fR\fR? \fBwaiting\fR
Returns the number of connections waiting to be processed\&.
.PP
.SH OPTIONS
.TP
\fB-server\fR \fIs\fR
Specifies the (virtual) server to be queried\&. If this option is not
specified, the current server is used as a source\&.
.TP
\fB-pool\fR \fIp\fR
Specifies the pool to be queried\&. If this option is not
specified, the default pool of the server is used as a source\&.
.TP
\fB-noinherit\fR
Optional flag for the connection pool
mappings\&. When used, the specified path will be used literally, i\&.e\&.,
only exactly this path, but no sub-paths are mapped\&.
.TP
\fBmapspec\fR
A list of two or three arguments, containing an HTTP method, a path
and optionally a context filter\&.
Example:
.CS


GET /*\&.tcl

.CE
.IP
When the \fImapspec\fR is used as three element list, the last
argument is the context filter, containing a request header-field and
a value for matching\&.  The pseudo request header-field "X-NS-ip" is
used for mapping requests from a certain IP address of from an IP
range (in CIDR notation)\&.  Examples:
.CS


ns_server -pool bots map "GET /* {user-agent *bot*}"
ns_server -pool bots map "GET /* {user-agent *crawl*}"
ns_server -pool bots map "GET /* {user-agent *baidu*}"
ns_server -pool bots map "GET /* {X-NS-ip 2a03:2880::/29}"

ns_server -pool local map "GET /* {X-NS-ip 127\&.0\&.0\&.1}"
ns_server -pool local map "GET /* {X-NS-ip 137\&.208\&.1\&.0/16}"

.CE
.PP
.SH EXAMPLES
The following example shows, how dynamic connection pool mapping can
be implemented based on the "partialtimes" of a request: When a
request is taking longer than a certain threshold, the combination of
HTTP method and request path (the \fImapspec\fR) is mapped dynamically
to a pool named "slow"\&. As a consequence later requests with the same
HTTP method and path will be served from this connection pool\&.
.CS


   ns_register_trace GET /* {
      set pt [ns_conn partialtimes]
      set req [list [ns_conn method] [ns_conn url]]
      set ctime [expr {[dict get $pt runtime] + [dict get $pt filtertime]}]
      if {$ctime > 3\&.0 && [ns_server mapped $req] eq ""} {
         ns_server -pool slow map -noinherit $req
      }
   }

.CE
The connection thread pools can be defined as usual in the config
file:
.CS


   ns_section "ns/server/${server}/pools" {
      ns_param fast "Fast lane pool"
      ns_param slow "Slow lane pool"
   }

   ns_section "ns/server/${server}/pool/fast" {
      ns_param minthreads 4
      ns_param maxthreads 4
      ns_param map "GET /*\&.png"
      ns_param map "GET /*\&.jpg"
      ns_param map "GET /*\&.pdf"
   }

   ns_section "ns/server/${server}/pool/slow" {
      ns_param minthreads 5
      ns_param maxthreads 15
      ns_param maxconnections 200
   }

.CE
Query a certain mapping:
.CS


   % ns_server mapped "GET /images/logo\&.png"
   fast

.CE
.SH "SEE ALSO"
ns_conn, ns_register
.SH KEYWORDS
configuration, connection thread pools, pagedir, pools, server built-in, tuning