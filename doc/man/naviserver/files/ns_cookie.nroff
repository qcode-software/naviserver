'\"
'\" Generated from file 'ns_cookie\&.man' by tcllib/doctools with format 'nroff'
'\"
.TH "ns_cookie" n 4\&.99\&.19 naviserver "NaviServer Built-In Commands"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
ns_cookie \- HTTP cookies
.SH SYNOPSIS
\fBns_setcookie\fR ?\fB-discard \fIbool\fR\fR? ?\fB-domain \fId\fR\fR? ?\fB-expires \fIt\fR\fR? ?\fB-path \fIp\fR\fR? ?\fB-replace \fIbool\fR\fR? ?\fB-scriptable \fIbool\fR\fR? ?\fB-secure \fIbool\fR\fR? ?\fB--\fR? \fIname\fR \fIdata\fR
.sp
\fBns_getcookie\fR ?\fB-all \fIbool\fR\fR? ?\fB-include_set_cookies \fIbool\fR\fR? ?\fB--\fR? \fIname\fR ?\fIdefault\fR?
.sp
\fBns_deletecookie\fR ?\fB-domain \fId\fR\fR? ?\fB-path \fIp\fR\fR? ?\fB-replace \fIbool\fR\fR? ?\fB-secure \fIbool\fR\fR? ?\fB--\fR? \fIname\fR
.sp
.BE
.SH DESCRIPTION
Cookies are small pieces of data which the server sends to the \fIuser agent\fR
and the user agent sends back during subsequent requests\&. You can use this
mechanism to save state between otherwise stateless HTTP requests\&.
.PP
Cookie size limits are user agent dependent\&. Practically, as cookies are sent
with every request to the server (for which the optional \fIdomain\fR and
\fIpath\fR match), size should be kept to a minimum\&.
.PP
These commands implement the original version 1 Netscape cookie protocol which
is widely supported by user agents\&.
.SH COMMANDS
.TP
\fBns_setcookie\fR ?\fB-discard \fIbool\fR\fR? ?\fB-domain \fId\fR\fR? ?\fB-expires \fIt\fR\fR? ?\fB-path \fIp\fR\fR? ?\fB-replace \fIbool\fR\fR? ?\fB-scriptable \fIbool\fR\fR? ?\fB-secure \fIbool\fR\fR? ?\fB--\fR? \fIname\fR \fIdata\fR
Send \fIdata\fR to the user agent as a cookie, using \fIname\fR as the
identifier\&. The user agent will send the cookie data back to the server
during subsequent requests for which the \fIdomain\fR and \fIpath\fR match,
if it has not expired\&. If the provided domain is empty, it is ignored\&.
.sp
A cookie is identified by a signature which is made up of it's name, domain,
path and secure flag\&. A cookie named \fIfoo\fR with path \fI/x/y\fR is a
different cookie than one named \fIfoo\fR with path \fI/x/y/z\fR\&. During a
request for the URL \fI/x/y/z\fR both cookies named \fIfoo\fR are sent\&.
.sp
The \fIdata\fR will be URL-encoded to escape special characters\&.
\fBns_getcookie\fR correctly reverses the encoding\&.
.TP
\fBns_getcookie\fR ?\fB-all \fIbool\fR\fR? ?\fB-include_set_cookies \fIbool\fR\fR? ?\fB--\fR? \fIname\fR ?\fIdefault\fR?
Get the cookie data identified by \fIname\fR\&. If no such cookie exists then
\fIdefault\fR is returned\&. If \fIdefault\fR is not given and no such cookie
exists, an error is raised\&. When the option ?\fB-include_set_cookies\fR? is set
true, then this command will search as well in the cookies being
currently set in the output headers\&.
.sp
By default, only the first cookie identified by \fIname\fR is returned\&. If two cookies
with the same name are sent by the user agent, each with a different \fIdomain\fR
and/or \fIpath\fR, which cookie data is returned depends on the user
agent\&. When the option ?\fB-all\fR? is set, all cookies with the
specified name are returned\&. This can be use to detect such situations
with multiple cookies\&. The option ?\fB-all\fR? cannot be set together
with the option ?\fB-include_set_cookies\fR?\&.
.sp
When using \fIdomain\fR or \fIpath\fR to restrict cookies, it is
recommended to use a unique name for each restricted cookie\&.
.TP
\fBns_deletecookie\fR ?\fB-domain \fId\fR\fR? ?\fB-path \fIp\fR\fR? ?\fB-replace \fIbool\fR\fR? ?\fB-secure \fIbool\fR\fR? ?\fB--\fR? \fIname\fR
Instruct the client to delete the cookie data identified by \fIname\fR\&. The
complete cookie signature including \fIdomain\fR and \fIpath\fR must match
for the cookie to be deleted\&. If the provided domain is empty, it is ignored\&.
.PP
.SH OPTIONS
.TP
\fB-discard\fR \fIboolean\fR
If the discard option is true then the cookie will be automatically
deleted at the end of the current session (when the user agent terminates)\&.
.TP
\fB-domain\fR \fIdomain\fR
Restrict the cookie to a domain name, such as \fIexample\&.com\fR\&. The
current domain is implied if none is specified\&.
.TP
\fB-expires\fR \fItime\fR
The cookie will expire in \fItime\fR seconds, after which the client will no
longer send the cookie back to the server\&. If \fItime\fR is large it is treated
as the absolute time in the future when the cookie should expire\&. The special
value \fI-1\fR may be used to indicate that the cookie should never
expire\&.
.TP
\fB-path\fR \fIpath\fR
Restrict the cookie to a URL path such as \fI/foo/bar\fR\&. If no path is
specified then the cookie will be back sent to the server for all requests\&.
If a path is specified the cookie will only be sent back for requests which
match the specified path, or a sub-path\&.
.TP
\fB-replace\fR \fIboolean\fR
If the replace option is true the cookie being set or deleted is as
well deleted from the current output header set if provided there\&.
The default value is false\&.
.TP
\fB-samesite\fR \fIstrict|lax|none\fR
When the flag is set it prevents the browser from
sending this cookie along with cross-site requests to mitigate cross site
scripting attacks\&. Permissible values are \fIstrict\fR, \fIlax\fR,
or \fInone\fR (default)\&. While the value \fIstrict\fR prevents
sending the cookie to the target site in all cross-site browsing
context, the value of \fIlax\fR allows sending the cookie when the
user clicks on regular links\&. For details, see
https://www\&.owasp\&.org/index\&.php/SameSite
.TP
\fB-scriptable\fR \fIboolean\fR
If the scriptable option is false or not given the cookie is unavailable to
JavaScript on the client\&. This can prevent cross site scripting attacks (XSS) on
clients which support the \fIHttpOnly\fR option\&. Set \fB-scriptable\fR to true
if you need to access the cookie via JavaScript\&.
.TP
\fB-secure\fR \fIboolean\fR
If the secure option is true then the cookie will only be sent back to the
server when the client uses a secure (\fITLS\fR/\fISSL\fR) connection\&.
.sp
The expiry time is valid across browser sessions\&.  If no expiry is
specified then the cookie will expire when the browser session ends,
which is usually when the user closes their browser\&.
.PP
.SH EXAMPLES
Track all user agents which ever vist out site:
.CS


proc browser_tracking_filter {} {
    if {![\fBns_getcookie\fR first_visit 0]} {
        \fBns_setcookie\fR -expires -1 -- first_visit [clock seconds]
    }
}
ns_register_filter preauth GET /* browser_tracking_filter

.CE
.SH "SEE ALSO"
ns_cookiecharset
.SH KEYWORDS
cookie, server built-in, session