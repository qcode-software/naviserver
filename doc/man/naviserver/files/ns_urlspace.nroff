'\"
'\" Generated from file 'ns_urlspace\&.man' by tcllib/doctools with format 'nroff'
'\"
.TH "ns_urlspace" n 4\&.99\&.23 naviserver "NaviServer Built-in Commands"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
ns_urlspace \- Assign Application Data to URLs\&.
.SH SYNOPSIS
\fBns_urlspace set\fR ?\fB-id \fIid\fR\fR? ?\fB-key \fIkey\fR\fR? ?\fB-noinherit\fR? \fIurl\fR \fIvalue\fR
.sp
\fBns_urlspace get\fR ?\fB-id \fIid\fR\fR? ?\fB-key \fIkey\fR\fR? ?\fB-exact\fR? ?\fB-noinherit\fR? \fIurl\fR \fIvalue\fR
.sp
\fBns_urlspace list\fR ?\fB-id \fIid\fR\fR?
.sp
\fBns_urlspace unset\fR ?\fB-id \fIid\fR\fR? ?\fB-key \fIkey\fR\fR? ?\fB-noinherit\fR? ?\fB-recurse\fR? \fIurl\fR
.sp
\fBns_urlspace new\fR
.sp
.BE
.SH DESCRIPTION The command \fBns_urlspace\fR allows one to
assign/query/list/delete data to the trie representing the URL
space\&. The command supports filters and inheritance such one can
e\&.g\&. assign data to certain patterns of pages (e\&.g\&. to \&.adp-pages) or
such one can assign data to a higher level node which can be
inherited to all nodes below this one\&.
.PP
The values assigned to the URL space are shared among all
threads of a server\&. So this command is somewhat similar to the set
of \fBnsv\fR commands, but differs in its inheritance and filtering
capabilities\&.
.PP
The command allows e\&.g\&. to implement access control (like the nsperm
module) on the Tcl level\&. Other applications are e\&.g\&. blacklisting of
certain parts of the URL tree from statistics, or to assign different
master templates to different parts of the URL tree\&.
.SH COMMANDS
.TP
\fBns_urlspace set\fR ?\fB-id \fIid\fR\fR? ?\fB-key \fIkey\fR\fR? ?\fB-noinherit\fR? \fIurl\fR \fIvalue\fR
Assign a value to a node in the URL space\&. Per default,
the value is inherited to all sub-nodes, unless the option
\fB-noinherit\fR is specified\&.
.TP
\fBns_urlspace get\fR ?\fB-id \fIid\fR\fR? ?\fB-key \fIkey\fR\fR? ?\fB-exact\fR? ?\fB-noinherit\fR? \fIurl\fR \fIvalue\fR
Retrieve a value from the URL space for a specified URL\&. Per
default, the returned values might be inherited from a parent node\&.
When the option \fB-exact\fR is used, the inheritance is
deactivated, and only the values are returned directly assigned to
the URL\&. When the option \fB-noinherit\fR is specified, only
values set with the \fB-noinherit\fR flag are returned\&.
.TP
\fBns_urlspace list\fR ?\fB-id \fIid\fR\fR?
List the values assigned to the URL space\&. The command returns a list
of lists, containing for every item the 5 elements
.RS
.IP \(bu
key
.IP \(bu
path
.IP \(bu
filter pattern
.IP \(bu
the constants \fBinherit\fR or \fBnoinherit\fR
.IP \(bu
the assigned data
.RE
.TP
\fBns_urlspace unset\fR ?\fB-id \fIid\fR\fR? ?\fB-key \fIkey\fR\fR? ?\fB-noinherit\fR? ?\fB-recurse\fR? \fIurl\fR
Unset a value for a URL for the given or default key\&. This command
undoes the effects of \fBns_urlspace set\fR\&. When the options
\fB-noinherit\fR is used the values set this way are deleted
and vice versa\&. The option \fB-recurse\fR performs the operation
recursively\&. Unless \fB-recurse\fR is specified, the command
returns 1 or 0 on success or failure\&.
.TP
\fBns_urlspace new\fR
Allocate a new URL space id\&. When the number of compile-time configured
URL spaces runs out, a Tcl exception is raised\&.
.PP
.SH OPTIONS
.TP
\fB-id\fR \fIid\fR
ID of the URL space\&. In general, multiple different URL spaces
could be used, which can be allocated with the command
\fBns_urlspace new\fR\&. The maximum number of available URL spaces
is a compile time constant of NaviServer\&. When no ID is specified,
NaviServer allocates automatically a default ID on first usage\&.
.TP
\fB-key\fR \fIkey\fR
Every URL has a key assigned, which is logically part of the URL
space\&. Using this key, one could for example use the HTTP methods
\fIGET\fR or \fIPOST\fR to assign different values to a URL
for GET or POST requests\&. The key can be used as well for other
purposes\&. If no key is specified, it default to the constant
"\fB\&.\fR" (dot character)\&.
.PP
.SH "SEE ALSO"
nsv
.SH KEYWORDS
data structure, server built-in, shared, trie, urlspace, variables
