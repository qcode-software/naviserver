[toc_begin {Table Of Contents} naviserver]
[item naviserver/files/commandlist.nroff           commandlist           {NaviServer Commands}]
[item naviserver/files/keyl.nroff                  keyl                  {Keyed Lists}]
[item naviserver/files/ns_absoluteurl.nroff        ns_absoluteurl        {Construct a completed URL from an incomplete URL based on a base URL}]
[item naviserver/files/ns_addrbyhost.nroff         ns_addrbyhost         {Forward lookup a hostname to its IP address}]
[item naviserver/files/ns_adp.nroff                ns_adp                {ADP introduction and operation}]
[item naviserver/files/ns_adp_abort.nroff          ns_adp_abort          {Stop processing of the current ADP and discard queued output}]
[item naviserver/files/ns_adp_append.nroff         ns_adp_append         {Append data to the output buffer for the current connection}]
[item naviserver/files/ns_adp_argc.nroff           ns_adp_argc           {Return the number of arguments to the current ADP}]
[item naviserver/files/ns_adp_argv.nroff           ns_adp_argv           {Return the number of arguments to the current ADP}]
[item naviserver/files/ns_adp_bind_args.nroff      ns_adp_bind_args      {Bind ADP arguments to variables}]
[item naviserver/files/ns_adp_break.nroff          ns_adp_break          {Stop processing of the current ADP}]
[item naviserver/files/ns_adp_close.nroff          ns_adp_close          {Flushes the ADP output buffer and closes the HTTP connection}]
[item naviserver/files/ns_adp_ctl.nroff            ns_adp_ctl            {ADP control command}]
[item naviserver/files/ns_adp_debug.nroff          ns_adp_debug          {Connect to the TclPro debugger if not already connected}]
[item naviserver/files/ns_adp_dir.nroff            ns_adp_dir            {Returns the current working directory for an ADP page}]
[item naviserver/files/ns_adp_dump.nroff           ns_adp_dump           {Return the contents of the current ADP output buffer}]
[item naviserver/files/ns_adp_exception.nroff      ns_adp_exception      {Examine the current ADP exception state}]
[item naviserver/files/ns_adp_flush.nroff          ns_adp_flush          {Flushes the ADP output buffer without closing the HTTP connection}]
[item naviserver/files/ns_adp_include.nroff        ns_adp_include        {Parse an ADP file and return its output}]
[item naviserver/files/ns_adp_info.nroff           ns_adp_info           {Get information about currently processing ADP}]
[item naviserver/files/ns_adp_mimetype.nroff       ns_adp_mimetype       {Get or set the mime type for the current ADP page}]
[item naviserver/files/ns_adp_parse.nroff          ns_adp_parse          {Parse an ADP file or string and return its output}]
[item naviserver/files/ns_adp_puts.nroff           ns_adp_puts           {Append data to the output buffer for the current connection}]
[item naviserver/files/ns_adp_register.nroff       ns_adp_register       {Creating custom ADP tags}]
[item naviserver/files/ns_adp_return.nroff         ns_adp_return         {Stop processing of the current ADP and return up the call stack}]
[item naviserver/files/ns_adp_stats.nroff          ns_adp_stats          {Return statistics about cached ADP pages}]
[item naviserver/files/ns_adp_tell.nroff           ns_adp_tell           {Get number of bytes in current ADP output buffer}]
[item naviserver/files/ns_adp_trunc.nroff          ns_adp_trunc          {Truncate the ADP output buffer}]
[item naviserver/files/ns_asynclogfile.nroff       ns_asynclogfile       {Manage connection channels.}]
[item naviserver/files/ns_atclose.nroff            ns_atclose            {Queue a script to run after the current connection is closed}]
[item naviserver/files/ns_atsignal.nroff           ns_atsignal           {Server callbacks}]
[item naviserver/files/ns_base64.nroff             ns_base64             {Binary-to-text and text-to-binary encoding}]
[item naviserver/files/ns_baseunit.nroff           ns_baseunit           {Check whether the provided byte-array contains a valid UTF-8 byte sequence}]
[item naviserver/files/ns_browsermatch.nroff       ns_browsermatch       {Match against the User-Agent header}]
[item naviserver/files/ns_cache.nroff              ns_cache              {Cache manipulation}]
[item naviserver/files/ns_chan.nroff               ns_chan               {Share Tcl channels between threads and interpreters}]
[item naviserver/files/ns_charsets.nroff           ns_charsets           {Determine the charsets for which we have encodings}]
[item naviserver/files/ns_checkurl.nroff           ns_checkurl           {Checks url for authorization}]
[item naviserver/files/ns_choosecharset.nroff      ns_choosecharset      {Return the name of the most appropriate charset for the request}]
[item naviserver/files/ns_cond.nroff               ns_cond               {Operate on condition variables}]
[item naviserver/files/ns_config.nroff             ns_config             {Configuration parameters}]
[item naviserver/files/ns_conn.nroff               ns_conn               {Find information about the current HTTP connection}]
[item naviserver/files/ns_connchan.nroff           ns_connchan           {Manage connection channels.}]
[item naviserver/files/ns_conncptofp.nroff         ns_conncptofp         {Write content to a file}]
[item naviserver/files/ns_cookie.nroff             ns_cookie             {HTTP cookies}]
[item naviserver/files/ns_cookiecharset.nroff      ns_cookiecharset      {Set the urlencoding to the charset given in the named cookie if it exists}]
[item naviserver/files/ns_critsec.nroff            ns_critsec            {Operate on critical section objects}]
[item naviserver/files/ns_crypt.nroff              ns_crypt              {Encrypt a string for use as a password}]
[item naviserver/files/ns_crypto.nroff             ns_crypto             {Low level cryptographic functions based on the OpenSSL crypto library}]
[item naviserver/files/ns_driver.nroff             ns_driver             {Obtain Network Driver Information.}]
[item naviserver/files/ns_encodingforcharset.nroff ns_encodingforcharset {Return the name of the encoding for the specified charset}]
[item naviserver/files/ns_encodingfortype.nroff    ns_encodingfortype    {Return the encoding implied by the given mime type string}]
[item naviserver/files/ns_env.nroff                ns_env                {Return, change or add a value of an environment variable}]
[item naviserver/files/ns_event.nroff              ns_event              {Manage events}]
[item naviserver/files/ns_filestat.nroff           ns_filestat           {Returns information about a file}]
[item naviserver/files/ns_findset.nroff            ns_findset            {Find a set by its name from a list of sets}]
[item naviserver/files/ns_fmttime.nroff            ns_fmttime            {Convert seconds to a human-readable format using templates}]
[item naviserver/files/ns_formfieldcharset.nroff   ns_formfieldcharset   {Set the urlencoding to the charset given in the named form field if it exists}]
[item naviserver/files/ns_ftruncate.nroff          ns_ftruncate          {truncate an open Tcl channel to a specified length}]
[item naviserver/files/ns_getcontent.nroff         ns_getcontent         {Return the message body of a received request}]
[item naviserver/files/ns_getform.nroff            ns_getform            {Return an ns_set that contains all of the query data that was part of the HTTP request}]
[item naviserver/files/ns_getformfile.nroff        ns_getformfile        {Return a tempfile for a form file field}]
[item naviserver/files/ns_gifsize.nroff            ns_gifsize            {Determine the width and height of a GIF87 or GIF89 image}]
[item naviserver/files/ns_gmtime.nroff             ns_gmtime             {Return current time in Greenwich Mean Time (GMT)}]
[item naviserver/files/ns_guesstype.nroff          ns_guesstype          {Lookup MIME type based on file extension}]
[item naviserver/files/ns_hash.nroff               ns_hash               {Compute a numeric hash value from a string}]
[item naviserver/files/ns_hashpath.nroff           ns_hashpath           {Break path into subdirectories}]
[item naviserver/files/ns_hmac.nroff               ns_hmac               {Returns a string containing a keyed-hash
message authentication code (HMAC)}]
[item naviserver/files/ns_hostbyaddr.nroff         ns_hostbyaddr         {Reverse lookup an IP address to its hostname}]
[item naviserver/files/ns_hotp.nroff               ns_hotp               {Returns a decimal-coded one-time password (HOTP)}]
[item naviserver/files/ns_hrefs.nroff              ns_hrefs              {Returns URLs from anchor elements in a chunk of HTML}]
[item naviserver/files/ns_htmlselect.nroff         ns_htmlselect         {Build an HTML SELECT form widget from the specified data}]
[item naviserver/files/ns_http.nroff               ns_http               {Simple HTTP client functionality}]
[item naviserver/files/ns_httptime.nroff           ns_httptime           {Convert seconds to HTTP date format}]
[item naviserver/files/ns_ictl.nroff               ns_ictl               {Manipulate and introspect Tcl interpreter internals}]
[item naviserver/files/ns_imgmime.nroff            ns_imgmime            {Return the MIME type of an image}]
[item naviserver/files/ns_imgsize.nroff            ns_imgsize            {Determine the width and height of a JPEG, GIF or PNG image}]
[item naviserver/files/ns_imgtype.nroff            ns_imgtype            {Return the type of an image}]
[item naviserver/files/ns_info.nroff               ns_info               {Return information about various aspects of the running NaviServer}]
[item naviserver/files/ns_internalredirect.nroff   ns_internalredirect   {Re-authorize and restart url processing}]
[item naviserver/files/ns_issmallint.nroff         ns_issmallint         {Test to see if a number is a 'smallint'}]
[item naviserver/files/ns_job.nroff                ns_job                {Implement job queues and thread pools for evaluating Tcl scripts}]
[item naviserver/files/ns_jpegsize.nroff           ns_jpegsize           {Determine the width and height of a JPEG image}]
[item naviserver/files/ns_kill.nroff               ns_kill               {Send a process a signal}]
[item naviserver/files/ns_library.nroff            ns_library            {Get the paths to the private and shared Tcl libraries}]
[item naviserver/files/ns_localtime.nroff          ns_localtime          {Return current time in local timezone}]
[item naviserver/files/ns_locationproc.nroff       ns_locationproc       {Register custom location handler}]
[item naviserver/files/ns_log.nroff                ns_log                {Global server error log}]
[item naviserver/files/ns_md.nroff                 ns_md                 {Returns a string containing a message digest (MD)}]
[item naviserver/files/ns_md5.nroff                ns_md5                {Returns a 32-character, hex-encoded string containing the MD5 hash of the first argument}]
[item naviserver/files/ns_memoize.nroff            ns_memoize            {Evaluate a Tcl script and cache the result}]
[item naviserver/files/ns_mktemp.nroff             ns_mktemp             {Make a unique temporary filename}]
[item naviserver/files/ns_moduleload.nroff         ns_moduleload         {Load binary module and initialize it}]
[item naviserver/files/ns_modulepath.nroff         ns_modulepath         {Get the paths to a server's modules}]
[item naviserver/files/ns_mutex.nroff              ns_mutex              {Operate on mutexes}]
[item naviserver/files/ns_normalizepath.nroff      ns_normalizepath      {Normalize a path}]
[item naviserver/files/ns_pagepath.nroff           ns_pagepath           {Return path to current virtual server pages}]
[item naviserver/files/ns_paren.nroff              ns_paren              {Surround string with parentheses}]
[item naviserver/files/ns_parseargs.nroff          ns_parseargs          {Parse list of arguments}]
[item naviserver/files/ns_parsefieldvalue.nroff    ns_parsefieldvalue    {Parse the content of an HTTP request or reply header field into its components}]
[item naviserver/files/ns_parseheader.nroff        ns_parseheader        {Parse HTTP header}]
[item naviserver/files/ns_parsehostport.nroff      ns_parsehostport      {Parse a string containing host and an optional port}]
[item naviserver/files/ns_parsehttptime.nroff      ns_parsehttptime      {Convert an HTTP date format string into seconds}]
[item naviserver/files/ns_parsequery.nroff         ns_parsequery         {Parse a URL query string into an ns_set}]
[item naviserver/files/ns_parsetime.nroff          ns_parsetime          {Return an element from the time structure list}]
[item naviserver/files/ns_parseurl.nroff           ns_parseurl           {Parse a URL into its components}]
[item naviserver/files/ns_pngsize.nroff            ns_pngsize            {Determine the width and height of a PNG image}]
[item naviserver/files/ns_purgefiles.nroff         ns_purgefiles         {Purge files by date, keeping max files}]
[item naviserver/files/ns_queryexists.nroff        ns_queryexists        {Check for a key in the query data that was part of the HTTP request}]
[item naviserver/files/ns_queryget.nroff           ns_queryget           {Get a value from the query data that was part of the HTTP request}]
[item naviserver/files/ns_querygetall.nroff        ns_querygetall        {Get multiple query values from the HTTP request}]
[item naviserver/files/ns_rand.nroff               ns_rand               {Generate a random number}]
[item naviserver/files/ns_register.nroff           ns_register           {Register Tcl/ADP handlers}]
[item naviserver/files/ns_requestauthorize.nroff   ns_requestauthorize   {Perform authorization check}]
[item naviserver/files/ns_return.nroff             ns_return             {Return a complete HTTP response}]
[item naviserver/files/ns_rlimit.nroff             ns_rlimit             {Get or set resource limit in the operating system}]
[item naviserver/files/ns_rollfile.nroff           ns_rollfile           {Roll an arbitrary file}]
[item naviserver/files/ns_runonce.nroff            ns_runonce            {Run Tcl script only once}]
[item naviserver/files/ns_rwlock.nroff             ns_rwlock             {Create, destroy, and manipulate read/write locks}]
[item naviserver/files/ns_schedule.nroff           ns_schedule           {Scheduling Tcl scripts}]
[item naviserver/files/ns_sema.nroff               ns_sema               {Operate on semaphore-like objects}]
[item naviserver/files/ns_sendmail.nroff           ns_sendmail           {Sending mail via SMTP}]
[item naviserver/files/ns_server.nroff             ns_server             {Get state of the server's connection pools and queues}]
[item naviserver/files/ns_serverpath.nroff         ns_serverpath         {Returns absolute path to current virtual server home}]
[item naviserver/files/ns_serverrootproc.nroff     ns_serverrootproc     {Callback for determining server root}]
[item naviserver/files/ns_set.nroff                ns_set                {Manipulate sets of key-value pairs}]
[item naviserver/files/ns_setexpires.nroff         ns_setexpires         {Set the current connections Expires header field to the current time plus seconds seconds}]
[item naviserver/files/ns_setformencoding.nroff    ns_setformencoding    {Set the form encoding of the current connection}]
[item naviserver/files/ns_setprivileges.nroff      ns_setuser            {Set the current procces privileges}]
[item naviserver/files/ns_sha1.nroff               ns_sha1               {Returns a 40-character, hex-encoded string containing the SHA1 hash of the first argument}]
[item naviserver/files/ns_shortcut_filter.nroff    ns_shortcut_filter    {Stop processing url filters}]
[item naviserver/files/ns_shutdown.nroff           ns_shutdown           {Shut down NaviServer}]
[item naviserver/files/ns_sleep.nroff              ns_sleep              {Sleep for a specified number of seconds}]
[item naviserver/files/ns_sls.nroff                ns_sls                {Socket local storage for connections}]
[item naviserver/files/ns_sockaccept.nroff         ns_sockaccept         {Accept a new socket connection}]
[item naviserver/files/ns_sockblocking.nroff       ns_sockblocking       {Set socket blocking}]
[item naviserver/files/ns_sockcallback.nroff       ns_sockcallback       {Register a socket callback script}]
[item naviserver/files/ns_sockcheck.nroff          ns_sockcheck          {Check if a socket is connected}]
[item naviserver/files/ns_socketpair.nroff         ns_socketpair         {Create a pair of connected sockets}]
[item naviserver/files/ns_socklisten.nroff         ns_socklisten         {Create a new socket listening for connections}]
[item naviserver/files/ns_socklistencallback.nroff ns_socklistencallback {Run script on connection}]
[item naviserver/files/ns_socknonblocking.nroff    ns_socknonblocking    {Set socket nonblocking}]
[item naviserver/files/ns_socknread.nroff          ns_socknread          {Return bytes to be read}]
[item naviserver/files/ns_sockopen.nroff           ns_sockopen           {Connect to a remote host on the specified port}]
[item naviserver/files/ns_sockselect.nroff         ns_sockselect         {Determine readable file id's}]
[item naviserver/files/ns_strcoll.nroff            ns_strcoll            {Compare strings according to the current locale collation}]
[item naviserver/files/ns_symlink.nroff            ns_symlink            {Create a symbolic link}]
[item naviserver/files/ns_tagelement.nroff         ns_tagelement         {Find the value of an attribute in an HTML element.}]
[item naviserver/files/ns_tagelementset.nroff      ns_tagelementset      {Set the value of the value attribute in an HTML element}]
[item naviserver/files/ns_thread.nroff             ns_thread             {Operate on threads}]
[item naviserver/files/ns_time.nroff               ns_time               {Perform various time-related functions}]
[item naviserver/files/ns_totp.nroff               ns_totp               {Returns a decimal-coded time-based one-time password (TOTP)}]
[item naviserver/files/ns_truncate.nroff           ns_truncate           {Truncate file in size}]
[item naviserver/files/ns_upload_stats.nroff       ns_upload_stats       {Return real-time statistic about being uploaded file}]
[item naviserver/files/ns_url2file.nroff           ns_url2file           {Return the path to a file referenced by a URL}]
[item naviserver/files/ns_urlcharset.nroff         ns_urlcharset         {Set the current connections url charset}]
[item naviserver/files/ns_urldecode.nroff          ns_urldecode          {URL decoding}]
[item naviserver/files/ns_urlencode.nroff          ns_urlencode          {Encode a string to its URL-encoded representation}]
[item naviserver/files/ns_urlspace.nroff           ns_urlspace           {Assign Application Data to URLs.}]
[item naviserver/files/ns_uudecode.nroff           ns_uudecode           {Binary-to-text decoding using "htuu" encoding}]
[item naviserver/files/ns_uuencode.nroff           ns_uuencode           {Binary-to-text encoding using "htuu" encoding}]
[item naviserver/files/ns_valid_utf8.nroff         ns_valid_utf8         {Check whether the provided byte-array contains a valid UTF-8 byte sequence}]
[item naviserver/files/ns_write.nroff              ns_write              {Return data to client}]
[item naviserver/files/ns_writecontent.nroff       ns_writecontent       {Write content to a file}]
[item naviserver/files/ns_writer.nroff             ns_writer             {Manage files with writer thread}]
[item naviserver/files/nsv.nroff                   nsv                   {NaviServer nsv Commands}]
[item naviserver/files/returnstatus-cmds.nroff     returnstatus-cmds     {Return a complete HTTP status message}]
[item naviserver/files/textutil-cmds.nroff         textutil-cmds         {Utility commands for processing text}]
[toc_end]
