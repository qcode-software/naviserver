'\"
'\" Generated from file 'ns_perm\&.man' by tcllib/doctools with format 'nroff'
'\"
.TH "ns_perm" n 4\&.99\&.19 nsperm "NaviServer Built-in Commands"
.\" The -*- nroff -*- definitions below are for supplemental macros used
.\" in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describing an argument to a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" to describe whether procedure reads or modifies arg,
.\"	and indent is equivalent to second arg of .IP (shouldn't ever be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizes of arguments for setting tab stops.  Type and
.\"	name are examples of largest possible arguments that will be passed
.\"	to .AP later.  If args are omitted, default tab stops are used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, everything will be
.\"	enclosed in one large box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, for use in marking newly-changed parts
.\"	of man pages.  The first argument is ignored and used for recording
.\"	the version when the .VS was added, so that the sidebars can be
.\"	found and removed when they reach a certain age.  If another argument
.\"	is present, then a line break is forced before starting the sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin an indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options for a Tk widget. The manpage
.\"	argument defines where to look up the standard options; if
.\"	omitted, defaults to "options". The options follow on successive
.\"	lines, in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options for a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option.  cmdName gives the
.\"	option's name as specified in the class command, dbName gives
.\"	the option's name in the option database, and dbClass gives
.\"	the option's class in the option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 in quotes, then arg2 normally (for trailing punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print an open parenthesis, arg1 in quotes, then arg2 normally
.\"	(for trailing punctuation) and then a closing parenthesis.
.\"
.\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = starting y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = starting y location
.\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro to handle page bottom:  finish off current
.\"	# box/sidebar if in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\*(So manual entry for details on the standard options.
..
.\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks to word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens and quotation marks to word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.BS
.SH NAME
ns_perm \- Add users, groups, and permissions
.SH SYNOPSIS
\fBns_perm adduser\fR ?\fB-allow\fR? ?\fB-deny\fR? ?\fB-clear\fR? ?\fB-salt \fIs\fR\fR? \fIname\fR \fIpass\fR \fIuserfield\fR ?\fIhost\&.\&.\&.\fR?
.sp
\fBns_perm deluser\fR \fIname\fR
.sp
\fBns_perm addgroup\fR \fIname\fR \fIuser\fR ?\fIuser\&.\&.\&.\fR?
.sp
\fBns_perm delgroup\fR \fIname\fR
.sp
\fBns_perm allowuser\fR ?\fB-noinherit\fR?
.sp
\fBns_perm denyuser\fR ?\fB-noinherit\fR? \fImethod\fR \fIurl\fR \fIuser\&.\&.\&.\fR
.sp
\fBns_perm allowgroup\fR ?\fB-noinherit\fR? \fImethod\fR \fIurl\fR \fIgroup\&.\&.\&.\fR
.sp
\fBns_perm denygroup\fR ?\fB-noinherit\fR? \fImethod\fR \fIurl\fR \fIgroup\&.\&.\&.\fR
.sp
\fBns_perm checkpass\fR \fIuser\fR \fIpasswd\fR
.sp
\fBns_perm setpass\fR \fIuser\fR \fIencpass\fR
.sp
\fBns_perm listusers\fR
.sp
\fBns_perm listgroups\fR
.sp
\fBns_perm listperms\fR
.sp
\fBns_permreload\fR
.sp
\fBns_permpasswd\fR \fIuser\fR \fIoldpasswd\fR \fInewpassed\fR
.sp
.BE
.SH DESCRIPTION
ns_perm adduser adds the user with the specified name and the encrypted password (encpass)
and the specified user text (userfield) into the users database\&.
.SH COMMANDS
.TP
\fBns_perm adduser\fR ?\fB-allow\fR? ?\fB-deny\fR? ?\fB-clear\fR? ?\fB-salt \fIs\fR\fR? \fIname\fR \fIpass\fR \fIuserfield\fR ?\fIhost\&.\&.\&.\fR?
.sp
\fB-allow\fR and hostnames are specified, the user will be allowed on the specified hostnames\&.
.sp
\fB-deny\fR and hostnames are specified, the user will be denied on the specified hostnames\&.
The hostname must be specified as ipaddress/netmask or dnshostname\&.
.CS


   128\&.2\&.142\&.0/255\&.255\&.255\&.0 or www\&.microsoft\&.com or \&.microsoft\&.com\&.

.CE
.sp
\fB-salt\fR
By default password is assumed encrypted with ns_crypt command and salt CU:
.CS


   ns_crypt mypasswd CU

.CE
.IP
This argument tells command that password is clear text and it should be encrypted
by the ns_perm command with specified salt\&.
.sp
\fB-clear\fR
Tells that we keep password in clear text
.TP
\fBns_perm deluser\fR \fIname\fR
ns_perm deluser deletes user from the memory
.TP
\fBns_perm addgroup\fR \fIname\fR \fIuser\fR ?\fIuser\&.\&.\&.\fR?
ns_perm addgroup creates a new group with the specified name that includes the users listed after the name\&.
.TP
\fBns_perm delgroup\fR \fIname\fR
ns_perm delgroup deletes group from the memory
.TP
\fBns_perm allowuser\fR ?\fB-noinherit\fR?
ns_perm allowuser allows the specified user access to the specified method and URL combination\&.
If -noinherit is specified, only access to the exact URL is allowed; otherwise, URLs under that
URL are allowed as well\&.
.TP
\fBns_perm denyuser\fR ?\fB-noinherit\fR? \fImethod\fR \fIurl\fR \fIuser\&.\&.\&.\fR
ns_perm denyuser denies the specified user access to the specified method and URL combination\&.
If -noinherit is specified, only access to the exact URL is denied; otherwise, URLs under that
URL are denied as well\&.
.TP
\fBns_perm allowgroup\fR ?\fB-noinherit\fR? \fImethod\fR \fIurl\fR \fIgroup\&.\&.\&.\fR
ns_perm allowgroup allows the specified group access to the specified method and URL combination\&.
If -noinherit is specified, only access to the exact URL is allowed; otherwise, URLs under that
URL are allowed as well\&.
.TP
\fBns_perm denygroup\fR ?\fB-noinherit\fR? \fImethod\fR \fIurl\fR \fIgroup\&.\&.\&.\fR
ns_perm denygroup denies the specified group access to the specified method and URL combination\&.
If -noinherit is specified, only access to the exact URL is denied; otherwise, URLs under that
URL are denied as well\&.
.TP
\fBns_perm checkpass\fR \fIuser\fR \fIpasswd\fR
ns_perm checkpass checks that the specified plain-text password is correct for the specified user\&.
A Tcl error is thrown if it does not match\&.
.TP
\fBns_perm setpass\fR \fIuser\fR \fIencpass\fR
ns_perm setpass updates the specified user's password to the encrypted password encpass\&. The password
should be encrypted using ns_encrypt\&.
.TP
\fBns_perm listusers\fR
Produce Tcl list of all current users in the format username password \&.\&.\&.\&.
.TP
\fBns_perm listgroups\fR
Produce Tcl list with all registered groups in the format: groupname {user \&.\&.\&.} \&.\&.\&.
.TP
\fBns_perm listperms\fR
Produce Tcl list with all registered allow/deny statements for each url
.TP
\fBns_permreload\fR
Reloads all ns_perm files, on very busy sites there could happen
authentication denies because this command clears the memory first and
then loads files from the disk
.TP
\fBns_permpasswd\fR \fIuser\fR \fIoldpasswd\fR \fInewpassed\fR
ns_permpasswd updates an existing user's password, both in the running
server's memory as well as in the passwd file on disk\&. The user is the
name of the user whose password is to be updated\&. The \fIoldpasswd\fR
argument is the user's old password, or the nsadmin password, in plain
text\&. The \fInewpasswd\fR argument is the new password in plain text\&.
.PP
.SH CONFIGURATION
The following configuration options are available to control
permission module:
.TP
htaccess
This parameter if set to true, enables \&.htaccess mode, similar to what
the Apache web server has but very simple and limited in
functionality\&.
.sp
On every request the server looks for \&.htaccess file in the
current request directory and loads it if modified since the last
read\&. The structure of the file is simple:
.CS


   allow user \&.\&.\&.
   deny user \&.\&.\&.

.CE
.TP
passwdfile
This parameter determines in \&.htaccess mode which file with users and
passwords needs to be checked for modification and reloaded
automatically\&. If \&.htaccess mode is not active, the parameter is
ignored\&.
.PP
.CS


   ns_section "ns/server/servername/module/nsperm"
   ns_param   htaccess   true
   ns_param   passwdfile /usr/local/ns/modules/nsperm/passwd

.CE
.SH EXAMPLES
.CS


   ns_perm adduser test [ns_crypt testpass ""] TestUser
   ns_perm adduser -salt CU test2 test TestUser2

   ns_perm allowuser GET /Documents test test2

.CE
.SH "SEE ALSO"
ns_crypt, nsd
.SH KEYWORDS
NaviServer, nsperm, server built-in