***************
*** 7,17 ****
  # Copyright (c) 2002-2005 ActiveState Corporation.
  #
  # See the file "license.terms" for information on usage and redistribution
  # of this file, and for a DISCLAIMER OF ALL WARRANTIES.
  
- AC_PREREQ(2.57)
  
  # Possible values for key variables defined:
  #
  # TEA_WINDOWINGSYSTEM - win32 aqua x11 (mirrors 'tk windowingsystem')
  # TEA_PLATFORM        - windows unix
--- 7,17 ----
  # Copyright (c) 2002-2005 ActiveState Corporation.
  #
  # See the file "license.terms" for information on usage and redistribution
  # of this file, and for a DISCLAIMER OF ALL WARRANTIES.
  
+ AC_PREREQ([2.69])
  
  # Possible values for key variables defined:
  #
  # TEA_WINDOWINGSYSTEM - win32 aqua x11 (mirrors 'tk windowingsystem')
  # TEA_PLATFORM        - windows unix
***************
*** 418,439 ****
      AC_SUBST(TCL_STUB_LIB_FLAG)
      AC_SUBST(TCL_STUB_LIB_SPEC)
  
      AC_MSG_CHECKING([platform])
      hold_cc=$CC; CC="$TCL_CC"
-     AC_TRY_COMPILE(,[
  	    #ifdef _WIN32
  		#error win32
  	    #endif
- 	], [
  	    # first test we've already retrieved platform (cross-compile), fallback to unix otherwise:
  	    TEA_PLATFORM="${TEA_PLATFORM-unix}"
  	    CYGPATH=echo
- 	], [
  	    TEA_PLATFORM="windows"
- 	    AC_CHECK_PROG(CYGPATH, cygpath, cygpath -m, echo)	]
-     )
      CC=$hold_cc
      AC_MSG_RESULT($TEA_PLATFORM)
  
      # The BUILD_$pkg is to define the correct extern storage class
      # handling when making this package
--- 418,439 ----
      AC_SUBST(TCL_STUB_LIB_FLAG)
      AC_SUBST(TCL_STUB_LIB_SPEC)
  
      AC_MSG_CHECKING([platform])
      hold_cc=$CC; CC="$TCL_CC"
+     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[
  	    #ifdef _WIN32
  		#error win32
  	    #endif
+ 	]])],[
  	    # first test we've already retrieved platform (cross-compile), fallback to unix otherwise:
  	    TEA_PLATFORM="${TEA_PLATFORM-unix}"
  	    CYGPATH=echo
+ 	],[
  	    TEA_PLATFORM="windows"
+ 	    AC_CHECK_PROG(CYGPATH, cygpath, cygpath -m, echo)	
+     ])
      CC=$hold_cc
      AC_MSG_RESULT($TEA_PLATFORM)
  
      # The BUILD_$pkg is to define the correct extern storage class
      # handling when making this package
***************
*** 2495,2539 ****
      AC_STRUCT_TIMEZONE
  
      AC_CHECK_FUNCS(gmtime_r localtime_r mktime)
  
      AC_CACHE_CHECK([tm_tzadj in struct tm], tcl_cv_member_tm_tzadj, [
- 	AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_tzadj;],
- 	    tcl_cv_member_tm_tzadj=yes, tcl_cv_member_tm_tzadj=no)])
      if test $tcl_cv_member_tm_tzadj = yes ; then
  	AC_DEFINE(HAVE_TM_TZADJ, 1, [Should we use the tm_tzadj field of struct tm?])
      fi
  
      AC_CACHE_CHECK([tm_gmtoff in struct tm], tcl_cv_member_tm_gmtoff, [
- 	AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_gmtoff;],
- 	    tcl_cv_member_tm_gmtoff=yes, tcl_cv_member_tm_gmtoff=no)])
      if test $tcl_cv_member_tm_gmtoff = yes ; then
  	AC_DEFINE(HAVE_TM_GMTOFF, 1, [Should we use the tm_gmtoff field of struct tm?])
      fi
  
      #
      # Its important to include time.h in this check, as some systems
      # (like convex) have timezone functions, etc.
      #
      AC_CACHE_CHECK([long timezone variable], tcl_cv_timezone_long, [
- 	AC_TRY_COMPILE([#include <time.h>],
- 	    [extern long timezone;
  	    timezone += 1;
- 	    exit (0);],
- 	    tcl_cv_timezone_long=yes, tcl_cv_timezone_long=no)])
      if test $tcl_cv_timezone_long = yes ; then
  	AC_DEFINE(HAVE_TIMEZONE_VAR, 1, [Should we use the global timezone variable?])
      else
  	#
  	# On some systems (eg IRIX 6.2), timezone is a time_t and not a long.
  	#
  	AC_CACHE_CHECK([time_t timezone variable], tcl_cv_timezone_time, [
- 	    AC_TRY_COMPILE([#include <time.h>],
- 		[extern time_t timezone;
  		timezone += 1;
- 		exit (0);],
- 		tcl_cv_timezone_time=yes, tcl_cv_timezone_time=no)])
  	if test $tcl_cv_timezone_time = yes ; then
  	    AC_DEFINE(HAVE_TIMEZONE_VAR, 1, [Should we use the global timezone variable?])
  	fi
      fi
  ])
--- 2497,2539 ----
      AC_STRUCT_TIMEZONE
  
      AC_CHECK_FUNCS(gmtime_r localtime_r mktime)
  
      AC_CACHE_CHECK([tm_tzadj in struct tm], tcl_cv_member_tm_tzadj, [
+ 	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <time.h>]], [[struct tm tm; (void)tm.tm_tzadj;]])],
+ 	    [tcl_cv_member_tm_tzadj=yes],[tcl_cv_member_tm_tzadj=no])])
      if test $tcl_cv_member_tm_tzadj = yes ; then
  	AC_DEFINE(HAVE_TM_TZADJ, 1, [Should we use the tm_tzadj field of struct tm?])
      fi
  
      AC_CACHE_CHECK([tm_gmtoff in struct tm], tcl_cv_member_tm_gmtoff, [
+ 	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <time.h>]], [[struct tm tm; (void)tm.tm_gmtoff;]])],
+ 	    [tcl_cv_member_tm_gmtoff=yes],[tcl_cv_member_tm_gmtoff=no])])
      if test $tcl_cv_member_tm_gmtoff = yes ; then
  	AC_DEFINE(HAVE_TM_GMTOFF, 1, [Should we use the tm_gmtoff field of struct tm?])
      fi
  
      #
      # Its important to include time.h in this check, as some systems
      # (like convex) have timezone functions, etc.
      #
      AC_CACHE_CHECK([long timezone variable], tcl_cv_timezone_long, [
+ 	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <time.h>]], [[extern long timezone;
  	    timezone += 1;
+ 	    exit (0);]])],
+ 	    [tcl_cv_timezone_long=yes],[tcl_cv_timezone_long=no])])
      if test $tcl_cv_timezone_long = yes ; then
  	AC_DEFINE(HAVE_TIMEZONE_VAR, 1, [Should we use the global timezone variable?])
      else
  	#
  	# On some systems (eg IRIX 6.2), timezone is a time_t and not a long.
  	#
  	AC_CACHE_CHECK([time_t timezone variable], tcl_cv_timezone_time, [
+ 	    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <time.h>]], [[extern time_t timezone;
  		timezone += 1;
+ 		exit (0);]])],
+ 		[tcl_cv_timezone_time=yes],[tcl_cv_timezone_time=no])])
  	if test $tcl_cv_timezone_time = yes ; then
  	    AC_DEFINE(HAVE_TIMEZONE_VAR, 1, [Should we use the global timezone variable?])
  	fi
      fi
  ])
***************
*** 2559,2569 ****
  
  AC_DEFUN([TEA_BUGGY_STRTOD], [
      AC_CHECK_FUNC(strtod, tcl_strtod=1, tcl_strtod=0)
      if test "$tcl_strtod" = 1; then
  	AC_CACHE_CHECK([for Solaris2.4/Tru64 strtod bugs], tcl_cv_strtod_buggy,[
- 	    AC_TRY_RUN([
  		#include <stdlib.h>
  		extern double strtod();
  		int main() {
  		    char *infString="Inf", *nanString="NaN", *spaceString=" ";
  		    char *term;
--- 2559,2569 ----
  
  AC_DEFUN([TEA_BUGGY_STRTOD], [
      AC_CHECK_FUNC(strtod, tcl_strtod=1, tcl_strtod=0)
      if test "$tcl_strtod" = 1; then
  	AC_CACHE_CHECK([for Solaris2.4/Tru64 strtod bugs], tcl_cv_strtod_buggy,[
+ 	    AC_RUN_IFELSE([AC_LANG_SOURCE([[
  		#include <stdlib.h>
  		extern double strtod();
  		int main() {
  		    char *infString="Inf", *nanString="NaN", *spaceString=" ";
  		    char *term;
***************
*** 2733,2750 ****
  AC_DEFUN([TEA_TCL_64BIT_FLAGS], [
      AC_MSG_CHECKING([for 64-bit integer type])
      AC_CACHE_VAL(tcl_cv_type_64bit,[
  	tcl_cv_type_64bit=none
  	# See if the compiler knows natively about __int64
- 	AC_TRY_COMPILE(,[__int64 value = (__int64) 0;],
- 	    tcl_type_64bit=__int64, tcl_type_64bit="long long")
  	# See if we could use long anyway  Note that we substitute in the
  	# type that is our current guess for a 64-bit type inside this check
  	# program, so it should be modified only carefully...
-         AC_TRY_COMPILE(,[switch (0) {
-             case 1: case (sizeof(]${tcl_type_64bit}[)==sizeof(long)): ;
-         }],tcl_cv_type_64bit=${tcl_type_64bit})])
      if test "${tcl_cv_type_64bit}" = none ; then
  	AC_DEFINE(TCL_WIDE_INT_IS_LONG, 1, [Do 'long' and 'long long' have the same size (64-bit)?])
  	AC_MSG_RESULT([yes])
      elif test "${tcl_cv_type_64bit}" = "__int64" \
  		-a "${TEA_PLATFORM}" = "windows" ; then
--- 2733,2750 ----
  AC_DEFUN([TEA_TCL_64BIT_FLAGS], [
      AC_MSG_CHECKING([for 64-bit integer type])
      AC_CACHE_VAL(tcl_cv_type_64bit,[
  	tcl_cv_type_64bit=none
  	# See if the compiler knows natively about __int64
+ 	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[__int64 value = (__int64) 0;]])],
+ 	    [tcl_type_64bit=__int64],[tcl_type_64bit="long long"])
  	# See if we could use long anyway  Note that we substitute in the
  	# type that is our current guess for a 64-bit type inside this check
  	# program, so it should be modified only carefully...
+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[switch (0) {
+             case 1: case (sizeof(${tcl_type_64bit})==sizeof(long)): ;
+         }]])],[tcl_cv_type_64bit=${tcl_type_64bit}],[])])
      if test "${tcl_cv_type_64bit}" = none ; then
  	AC_DEFINE(TCL_WIDE_INT_IS_LONG, 1, [Do 'long' and 'long long' have the same size (64-bit)?])
  	AC_MSG_RESULT([yes])
      elif test "${tcl_cv_type_64bit}" = "__int64" \
  		-a "${TEA_PLATFORM}" = "windows" ; then
***************
*** 2756,2795 ****
  	    [What type should be used to define wide integers?])
  	AC_MSG_RESULT([${tcl_cv_type_64bit}])
  
  	# Now check for auxiliary declarations
  	AC_CACHE_CHECK([for struct dirent64], tcl_cv_struct_dirent64,[
- 	    AC_TRY_COMPILE([#include <sys/types.h>
- #include <dirent.h>],[struct dirent64 p;],
- 		tcl_cv_struct_dirent64=yes,tcl_cv_struct_dirent64=no)])
  	if test "x${tcl_cv_struct_dirent64}" = "xyes" ; then
  	    AC_DEFINE(HAVE_STRUCT_DIRENT64, 1, [Is 'struct dirent64' in <sys/types.h>?])
  	fi
  
  	AC_CACHE_CHECK([for DIR64], tcl_cv_DIR64,[
- 	    AC_TRY_COMPILE([#include <sys/types.h>
- #include <dirent.h>],[struct dirent64 *p; DIR64 d = opendir64(".");
-             p = readdir64(d); rewinddir64(d); closedir64(d);],
- 		tcl_cv_DIR64=yes,tcl_cv_DIR64=no)])
  	if test "x${tcl_cv_DIR64}" = "xyes" ; then
  	    AC_DEFINE(HAVE_DIR64, 1, [Is 'DIR64' in <sys/types.h>?])
  	fi
  
  	AC_CACHE_CHECK([for struct stat64], tcl_cv_struct_stat64,[
- 	    AC_TRY_COMPILE([#include <sys/stat.h>],[struct stat64 p;
- ],
- 		tcl_cv_struct_stat64=yes,tcl_cv_struct_stat64=no)])
  	if test "x${tcl_cv_struct_stat64}" = "xyes" ; then
  	    AC_DEFINE(HAVE_STRUCT_STAT64, 1, [Is 'struct stat64' in <sys/stat.h>?])
  	fi
  
  	AC_CHECK_FUNCS(open64 lseek64)
  	AC_MSG_CHECKING([for off64_t])
  	AC_CACHE_VAL(tcl_cv_type_off64_t,[
- 	    AC_TRY_COMPILE([#include <sys/types.h>],[off64_t offset;
- ],
- 		tcl_cv_type_off64_t=yes,tcl_cv_type_off64_t=no)])
  	dnl Define HAVE_TYPE_OFF64_T only when the off64_t type and the
  	dnl functions lseek64 and open64 are defined.
  	if test "x${tcl_cv_type_off64_t}" = "xyes" && \
  	        test "x${ac_cv_func_lseek64}" = "xyes" && \
  	        test "x${ac_cv_func_open64}" = "xyes" ; then
--- 2756,2795 ----
  	    [What type should be used to define wide integers?])
  	AC_MSG_RESULT([${tcl_cv_type_64bit}])
  
  	# Now check for auxiliary declarations
  	AC_CACHE_CHECK([for struct dirent64], tcl_cv_struct_dirent64,[
+ 	    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
+ #include <dirent.h>]], [[struct dirent64 p;]])],
+ 		[tcl_cv_struct_dirent64=yes],[tcl_cv_struct_dirent64=no])])
  	if test "x${tcl_cv_struct_dirent64}" = "xyes" ; then
  	    AC_DEFINE(HAVE_STRUCT_DIRENT64, 1, [Is 'struct dirent64' in <sys/types.h>?])
  	fi
  
  	AC_CACHE_CHECK([for DIR64], tcl_cv_DIR64,[
+ 	    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
+ #include <dirent.h>]], [[struct dirent64 *p; DIR64 d = opendir64(".");
+             p = readdir64(d); rewinddir64(d); closedir64(d);]])],
+ 		[tcl_cv_DIR64=yes],[tcl_cv_DIR64=no])])
  	if test "x${tcl_cv_DIR64}" = "xyes" ; then
  	    AC_DEFINE(HAVE_DIR64, 1, [Is 'DIR64' in <sys/types.h>?])
  	fi
  
  	AC_CACHE_CHECK([for struct stat64], tcl_cv_struct_stat64,[
+ 	    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/stat.h>]], [[struct stat64 p;
+ ]])],
+ 		[tcl_cv_struct_stat64=yes],[tcl_cv_struct_stat64=no])])
  	if test "x${tcl_cv_struct_stat64}" = "xyes" ; then
  	    AC_DEFINE(HAVE_STRUCT_STAT64, 1, [Is 'struct stat64' in <sys/stat.h>?])
  	fi
  
  	AC_CHECK_FUNCS(open64 lseek64)
  	AC_MSG_CHECKING([for off64_t])
  	AC_CACHE_VAL(tcl_cv_type_off64_t,[
+ 	    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>]], [[off64_t offset;
+ ]])],
+ 		[tcl_cv_type_off64_t=yes],[tcl_cv_type_off64_t=no])])
  	dnl Define HAVE_TYPE_OFF64_T only when the off64_t type and the
  	dnl functions lseek64 and open64 are defined.
  	if test "x${tcl_cv_type_off64_t}" = "xyes" && \
  	        test "x${ac_cv_func_lseek64}" = "xyes" && \
  	        test "x${ac_cv_func_open64}" = "xyes" ; then
