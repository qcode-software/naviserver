Change ns_eval switch from -synch to -sync
--- a/nsd/init.tcl
+++ b/nsd/init.tcl
@@ -380,7 +380,7 @@
 
     proc ns_eval {cmd args} {
 
-        if {$cmd eq {-synch} || $cmd eq {-pending}} {
+        if {$cmd eq {-sync} || $cmd eq {-pending}} {
             # Skip for the compatibility
             set cmd  [lindex $args 0]
             set args [lrange $args 1 end]
@@ -457,7 +457,7 @@
         if {$len == 0} {
             return
         }
-        if {$len > 1 && [lindex $args 0] eq "-synch"} {
+        if {$len > 1 && [lindex $args 0] eq "-sync"} {
             set sync 1
             set args [lreplace $args 0 0]
             incr len -1
--- a/tests/tclresp.test
+++ b/tests/tclresp.test
@@ -361,7 +361,7 @@
     # this mutex isn't necessary; it only serves as an assurance that
     # the problem is in fact a cache collision and not a race condition
     nsv_set fast_coll lock [ns_mutex create]
-    ns_eval -synch [list {
+    ns_eval -sync [list {
 	proc fast_coll {} {
 	   set filename "/tmp/fast_coll"
 	   ns_mutex lock [nsv_get fast_coll lock]
