#!/bin/sh
# postinst script for naviserver
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


PACKAGE="naviserver"
INSTANCE="default"
LOGDIR="/var/log/$PACKAGE"
ETCDIR="/etc/$PACKAGE"
SSL_CERT="$ETCDIR/$INSTANCE.pem"


if [ "$1" != "configure" ]
then
    exit 0
fi

# create the system pageroot dir if it does not exist

if [ ! -d /var/www/html ]; then
        mkdir -p /var/www/html
        chown root:root /var/www/html
        chmod 755 /var/www/html
fi

# assign ownership of log directory to www-data if they don't already exist.
# If it does exist, leave the permissions be.

if [ ! -d $LOGDIR ]; then
        mkdir -p $LOGDIR
	chown www-data:www-data $LOGDIR
	chmod 755 $LOGDIR
fi

# Set permissions on default pageroot
if [ -d /usr/share/doc/$PACKAGE ]; then
	chown www-data:www-data /usr/share/doc/$PACKAGE
	chmod 755 /usr/share/doc/$PACKAGE
fi

# Cleanup old init script if still present
if [ -f /etc/init.d/naviserver ]; then
	update-rc.d naviserver remove
	rm -f /etc/init.d/naviserver
fi

# Create tmpfiles.
# If a local version of tmpfiles snippet exists, use that. Otherwise use package version.
if [ -d /run/systemd/system ] ; then
        if [ -f /etc/tmpfiles.d/naviserver.conf ] ; then
                systemd-tmpfiles --create /etc/tmpfiles.d/naviserver.conf >/dev/null || true
        else
                systemd-tmpfiles --create /usr/lib/tmpfiles.d/naviserver.conf >/dev/null || true
        fi
fi

# Create default certificate
if [ ! -f $SSL_CERT ]; then
	TMPOUT=`mktemp` || exit 1
	TMPFILE=`mktemp` || exit 1
	if ! HSTNAME="$(hostname -f)" ; then
		HSTNAME="$(hostname)"
	fi
	cat <<EOF >$TMPFILE
#
# Naviserver SSL default cert configuration file.
#
[ req ]
default_bits            = 2048
default_keyfile         = privkey.pem
distinguished_name      = req_distinguished_name
prompt                  = no
policy			= policy_anything
[ req_distinguished_name ]
commonName                      = $HSTNAME
EOF

	if ! openssl req -config $TMPFILE -new -x509 -days 3650 -nodes -out $SSL_CERT -keyout $SSL_CERT > $TMPOUT 2>&1 ; then
		echo "Could not create certificate. Openssl output was:" >&2
		cat $TMPOUT >&2
		# Cleanup, since key may have been written to $SSL_CERT before failure. Don't care if it fails.
		rm -f $SSL_CERT || true
		exit 1
	else
		chown www-data:www-data $SSL_CERT
    	fi
fi

#DEBHELPER#
