# Emacs mode:  -*-Makefile-*-

# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/.
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is AOLserver Code and related documentation
# distributed by AOL.
#
# The Initial Developer of the Original Code is America Online,
# Inc. Portions created by AOL are Copyright (C) 1999 America Online,
# Inc. All Rights Reserved.
#
# Alternatively, the contents of this file may be used under the terms
# of the GNU General Public License (the "GPL"), in which case the
# provisions of GPL are applicable instead of those above.  If you wish
# to allow use of your version of this file only under the terms of the
# GPL and not to allow others to use your version of this file under the
# License, indicate your decision by deleting the provisions above and
# replace them with the notice and other provisions required by the GPL.
# If you do not delete the provisions above, a recipient may use your
# version of this file under either the License or the GPL.
#

#
# Makefile.module --
#
#     Makefile include for NaviServer modules, libraries, and programs.  Variables to set
#     before including this file include:
#
#     NAVISERVER  naviserver install directory.
#     MODNAME     Unique name of module
#     MOD         File name of binary loadable module
#     MODOBJS     List of module object files (required with MOD)
#     TCL         List of module shared Tcl files
#     LIBNM       Root name of dynamic library (without lib prefix or extension)
#     LIBOBJS     List of library object files (required with LIBNM)
#     LIBHDRS     List of public header files to install (required with module LIBNM)
#     PGM         Name of executable program
#     PGMOBJS     List of program object files (required with PGM)
#     HDRS        Header files which objects depend on
#     MODLIBS     Extra module link libraries
#     LIBLIBS     Extra dynamic library link libraries
#     PGMLIBS     Extra program link libraries
#     INSTALL     Extra install directive(s)
#     CLEAN       Extra clean directive(s)
#     DESTDIR     Root directory for install
#
#     At least one of PGM, MOD, or LIBNM must be defined.  For backwards compatibility,
#     MODOBJS will default to OBJS and MODINST can be used for module install.
#
#     For static builds (use configure --disable-shared) the LIBNM variable is
#     replaced with ALIB which triggers the linking of the static library.
#
#     See nsd/Makefile and nsdb/Makefile for examples.
#
#     Note that we do *not* use a variables named "LIB" or "INCLUDE",
#     because they would conflict with environment variables of the same
#     name needed by the Microsoft Windows compiler and/or linker.
#

uname = $(shell uname -a)

STATIC_BUILD = @STATIC_BUILD@

ifdef NSBUILD
    ifeq ($(STATIC_BUILD), 1)
        ALIB    := $(LIBNM)
        LIBNM   :=
    endif
    include ../include/Makefile.global
else
    include $(NAVISERVER)/include/Makefile.global
endif

ifdef MOD
    ifneq (,$(findstring MINGW,$(uname)))
        MOD := $(shell basename $(MOD) .so)$(LIBEXT)
    endif
    BUILD     += $(MOD)
    INSTALL   += install-mod
    CLEAN     += clean-mod
    ifeq ($(origin MODOBJS), undefined)
        MODOBJS	= $(OBJS)
    endif
    MODOBJS   += $(UNIXOBJS)
endif

ifdef TCL
    ifndef MODNAME
        $(error MODNAME not specified)
    endif
    INSTALL += install-tcl
endif

ifdef LIBNM
    LIBFILE	 = lib$(LIBNM)$(LIBEXT)
    BUILD   += $(LIBFILE)
    INSTALL += install-lib
    CLEAN   += clean-lib
    MODLIBS += $(LIBFILE)
    PGMLIBS += $(LIBFILE)
    LIBOBJS += $(UNIXOBJS)
endif

ifdef ALIB
    ALIBFILE  = lib$(ALIB).a
    BUILD    += $(ALIBFILE)
    INSTALL  += install-alib
    CLEAN    += clean-alib
    MODLIBS  += $(ALIBFILE)
    PGMLIBS  += $(ALIBFILE)
    LIBOBJS  += $(UNIXOBJS)
endif

ifdef PGM
    ifneq (,$(findstring MINGW,$(uname)))
        PGM := $(PGM).exe
    endif
    BUILD   += $(PGM)
    INSTALL += install-pgm
    CLEAN   += clean-pgm
endif

ifdef LIBHDRS
    INSTALL += install-hdrs
endif

all build: $(BUILD)

install: $(INSTALL)

clean: $(CLEAN)

$(MOD): $(LIBFILE) $(ALIBFILE) $(MODOBJS)
	$(RM) $(MOD)
	$(LDSO) $(LDFLAGS) -o $(MOD) $(MODOBJS) $(MODLIBS) $(NSLIBS) @LDRPATH@

$(LIBFILE): $(LIBOBJS)
	$(RM) $(LIBFILE)
	$(LDLIB) $(LDFLAGS) -o $(LIBFILE) $(LIBOBJS) $(LIBLIBS) $(NSLIBS) @LDRPATH@

$(ALIBFILE): $(LIBOBJS)
	$(AR) rv $(ALIBFILE) $(LIBOBJS)
	$(RANLIB) $(ALIBFILE)

$(PGM): $(PGMOBJS) $(LIBFILE) $(ALIBFILE)
	$(RM) $(PGM)
	$(CC) $(LDFLAGS) -o $(PGM) $(PGMOBJS) $(PGMLIBS) $(CCLIBS) @CCRPATH@

$(MODOBJS) $(LIBOBJS) $(PGMOBJS): $(HDRS) $(INCDIR)/ns.h $(INCDIR)/nsthread.h

install-mod: $(MOD) $(MODINST)
	$(INSTALL_SH) $(MOD) $(DESTDIR)$(INSTBIN)/

install-tcl: $(TCL)
	@$(MKDIR) $(DESTDIR)$(INSTTCL)/$(MODNAME)
	for t in $(TCL); do \
		$(INSTALL_DATA) $$t $(DESTDIR)$(INSTTCL)/$(MODNAME)/; \
	done

install-lib: $(LIBFILE)
	$(INSTALL_SH) $(LIBFILE) $(DESTDIR)$(INSTLIB)/
    ifneq (,$(findstring MINGW,$(uname)))
		$(INSTALL_SH) $(LIBFILE) $(DESTDIR)$(INSTBIN)/
    endif

install-alib: $(ALIBFILE)
	$(INSTALL_SH) $(ALIBFILE) $(DESTDIR)$(INSTLIB)/
	$(RANLIB) $(ALIBFILE)

install-pgm: $(PGM)
	$(INSTALL_SH) $(PGM) $(DESTDIR)$(INSTBIN)/

install-hdrs: $(LIBHDRS)
	for h in $(LIBHDRS); do \
		$(INSTALL_DATA) $$h $(DESTDIR)$(INSTHDR)/; \
	done

clean-mod:
	$(RM) $(MOD) $(MODOBJS)

clean-lib:
	$(RM) $(LIBFILE) $(LIBOBJS)

clean-alib:
	$(RM) $(ALIBFILE) $(LIBOBJS)

clean-pgm:
	$(RM) $(PGM) $(PGMOBJS)

.PHONY: clean-mod clean-lib clean-alib clean-pgm
